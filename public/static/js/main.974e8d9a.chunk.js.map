{"version":3,"sources":["components/UI/Headlines/SettingsHeadline/SettingsHeadline.module.css","store/action-types/index.ts","store/reducers/theme.ts","components/UI/Icons/WeatherIcon/IconMapping.ts","utility/iconParser.ts","utility/urlParser.ts","store/action-creators/theme.ts","store/action-creators/config.ts","store/action-creators/notification.ts","store/action-creators/app.ts","store/action-creators/bookmark.ts","store/action-creators/auth.ts","utility/checkVersion.ts","utility/sortData.ts","utility/redirectUrl.ts","utility/templateObjects/settingsTemplate.ts","utility/templateObjects/appTemplate.ts","utility/templateObjects/categoryTemplate.ts","utility/templateObjects/bookmarkTemplate.ts","utility/inputHandler.ts","utility/storeUIConfig.ts","utility/validators.ts","utility/parseTime.ts","utility/decodeToken.ts","utility/applyAuth.ts","utility/escapeRegex.ts","store/reducers/config.ts","utility/templateObjects/configTemplate.ts","store/reducers/notification.ts","store/reducers/app.ts","store/reducers/bookmark.ts","store/reducers/auth.ts","store/reducers/index.ts","store/store.ts","components/UI/Table/Table.tsx","components/UI/Spinner/Spinner.tsx","components/UI/Notification/Notification.tsx","components/UI/Modal/Modal.tsx","components/UI/Layout/Layout.tsx","components/UI/Icons/Icon/Icon.tsx","components/Bookmarks/Bookmarks.tsx","components/UI/Icons/WeatherIcon/WeatherIcon.tsx","components/UI/Headlines/Headline/Headline.tsx","components/UI/Headlines/SectionHeadline/SectionHeadline.tsx","components/UI/Headlines/SettingsHeadline/SettingsHeadline.tsx","components/UI/Forms/InputGroup/InputGroup.tsx","components/UI/Forms/ModalForm/ModalForm.tsx","components/UI/Buttons/ActionButton/ActionButton.tsx","components/UI/Buttons/Button/Button.tsx","components/UI/Text/Message/Message.tsx","components/Apps/AppCard/AppCard.tsx","components/Apps/AppGrid/AppGrid.tsx","components/Bookmarks/BookmarkCard/BookmarkCard.tsx","components/Bookmarks/BookmarkGrid/BookmarkGrid.tsx","components/SearchBar/SearchBar.tsx","utility/searchParser.ts","utility/templateObjects/weatherTemplate.ts","components/Widgets/WeatherWidget/WeatherWidget.tsx","components/Home/Header/functions/getDateTime.ts","components/Home/Header/functions/greeter.ts","components/Home/Header/Header.tsx","components/Home/Home.tsx","components/Apps/AppForm/AppForm.tsx","components/Actions/TableActions.tsx","components/Apps/AppTable/AppTable.tsx","components/Apps/Apps.tsx","components/Settings/Themer/ThemePreview.tsx","components/Settings/Themer/Themer.tsx","components/Settings/WeatherSettings/WeatherSettings.tsx","components/Settings/UISettings/UISettings.tsx","components/Settings/AppDetails/AuthForm/AuthForm.tsx","components/Settings/AppDetails/AppDetails.tsx","components/Settings/StyleSettings/StyleSettings.tsx","components/Settings/GeneralSettings/CustomQueries/QueriesForm.tsx","components/Settings/GeneralSettings/CustomQueries/CustomQueries.tsx","components/Settings/GeneralSettings/GeneralSettings.tsx","components/Settings/DockerSettings/DockerSettings.tsx","components/Routing/ProtectedRoute.tsx","components/Settings/Settings.tsx","components/Bookmarks/Form/CategoryForm.tsx","components/Bookmarks/Form/BookmarksForm.tsx","components/Bookmarks/Form/Form.tsx","components/Bookmarks/Table/BookmarksTable.tsx","components/Bookmarks/Table/CategoryTable.tsx","components/Bookmarks/Table/Table.tsx","components/NotificationCenter/NotificationCenter.tsx","App.tsx","index.tsx","components/Bookmarks/BookmarkCard/BookmarkCard.module.css","components/Apps/AppCard/AppCard.module.css","components/Settings/AppDetails/AppDetails.module.css","components/Actions/TableActions.module.css","components/Settings/Settings.module.css","components/Settings/Themer/ThemePreview.module.css","components/UI/Table/Table.module.css","components/UI/Notification/Notification.module.css","components/UI/Buttons/ActionButton/ActionButton.module.css","components/UI/Modal/Modal.module.css","components/Home/Header/Header.module.css","components/Widgets/WeatherWidget/WeatherWidget.module.css","components/Settings/GeneralSettings/CustomQueries/CustomQueries.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Headlines/Headline/Headline.module.css","components/UI/Forms/ModalForm/ModalForm.module.css","components/UI/Text/Message/Message.module.css","components/Home/Home.module.css","components/SearchBar/SearchBar.module.css","components/Apps/Apps.module.css","components/Apps/AppForm/AppForm.module.css","components/Bookmarks/Form/Form.module.css","components/UI/Layout/Layout.module.css","components/UI/Icons/Icon/Icon.module.css","components/UI/Headlines/SectionHeadline/SectionHeadline.module.css","components/UI/Forms/InputGroup/InputGroup.module.css","components/UI/Buttons/Button/Button.module.css","components/Apps/AppGrid/AppGrid.module.css","components/Bookmarks/BookmarkGrid/BookmarkGrid.module.css","components/Settings/Themer/Themer.module.css","components/Bookmarks/Bookmarks.module.css","components/NotificationCenter/NotificationCenter.module.css"],"names":["module","exports","ActionType","TimeOfDay","initialState","theme","name","colors","background","primary","accent","iconParser","mdiName","parsedName","split","map","word","toUpperCase","slice","join","urlParser","url","test","hasProtocol","isSteamUrl","isWebUrl","replace","setTheme","remeberTheme","dispatch","themes","find","localStorage","setItem","loadTheme","type","payload","Object","entries","key","value","document","body","style","setProperty","keys","getConfig","a","axios","get","res","data","title","customTitle","storeUIConfig","console","log","updateConfig","formData","put","headers","applyAuth","createNotification","message","fetchQueries","addQuery","query","post","deleteQuery","prefix","delete","updateQuery","oldPrefix","notification","clearNotification","id","getApps","undefined","getAppsSuccess","pinApp","app","isPinned","status","addApp","addAppSuccess","sortApps","deleteApp","updateApp","reorderApps","apps","forEach","index","push","orderId","useOrdering","setEditApp","getCategories","getCategoriesSuccess","addCategory","sortCategories","addBookmark","sortBookmarks","categoryId","pinCategory","category","deleteCategory","updateCategory","deleteBookmark","bookmarkId","updateBookmark","curr","prev","reorderCategories","categories","setEditCategory","setEditBookmark","bookmark","reorderBookmarks","bookmarks","orderType","login","token","authError","logout","removeItem","autoLogin","error","showNotification","apiError","response","checkVersion","isForced","process","pair","store","sortData","array","field","sortedData","sort","b","localeCompare","sensitivity","createdAt","redirectUrl","sameTab","parsedUrl","location","window","open","uiSettingsTemplate","hideHeader","hideApps","hideCategories","useAmericanDate","greetingsSchema","daySchema","monthSchema","showTime","hideDate","hideSearch","disableAutofocus","weatherSettingsTemplate","WEATHER_API_KEY","lat","long","isCelsius","weatherData","generalSettingsTemplate","searchSameTab","defaultSearchProvider","pinAppsByDefault","pinCategoriesByDefault","appsSameTab","bookmarksSameTab","dockerSettingsTemplate","dockerApps","dockerHost","kubernetesApps","unpinStoppedApps","themeSettingsTemplate","defaultTheme","newAppTemplate","icon","isPublic","description","newCategoryTemplate","Date","updatedAt","categoryTemplate","newBookmarkTemplate","bookmarkTemplate","inputHandler","params","e","options","setStateHandler","state","rawValue","target","isNumber","isBool","parseFloat","parseInt","config","isUrlOrIp","isUrl","isImage","isSvg","parseTime","time","ms","toString","decodeToken","jwtDecode","getItem","escapeRegex","exp","loading","isKilometer","customQueries","notifications","idCounter","errors","appInUpdate","categoryInEdit","bookmarkInEdit","isAuthenticated","reducers","combineReducers","action","filter","appIdx","findIndex","categoryIdx","targetCategory","bookmarkIdx","sortedBookmarks","auth","createStore","composeWithDevTools","applyMiddleware","thunk","Table","props","className","classes","TableContainer","ref","innerRef","TableHead","header","TableBody","children","Spinner","SpinnerWrapper","Notification","useDispatch","bindActionCreators","actionCreators","useState","isOpen","setIsOpen","elementClasses","NotificationOpen","NotificationClose","useEffect","closeNotification","setTimeout","clearNotificationTimeout","clearTimeout","onClick","Pog","Modal","modalRef","useRef","modalClasses","ModalOpen","ModalClose","current","Container","Icon","MDIcons","require","iconPath","mdiCancel","path","color","ContentType","IconMapping","conditions","code","day","night","weatherStatusCode","timeOfDay","mapping","this","condition","WeatherIcon","useSelector","isDay","mapIcon","delay","skycons","Skycons","add","play","width","height","Headline","HeadlineTitle","subtitle","HeadlineSubtitle","SectionHeadline","to","link","SettingsHeadline","text","InputGroup","ModalForm","ModalFormIcon","modalHandler","onSubmit","formHandler","ActionButton","ActionButtonIcon","ActionButtonName","tabIndex","handler","onKeyPress","Button","click","Message","isPrimary","messageCenter","AppCard","iconEl","displayUrl","source","src","alt","CustomIcon","fill","href","rel","AppCardIcon","AppCardDetails","length","AppGrid","searching","totalApps","BookmarkCard","fromHomepage","BookmarkHeader","Bookmarks","BookmarkIcon","BookmarkIconSvg","BookmarkGrid","totalCategories","SearchBar","setLocalSearch","appSearchResult","bookmarkSearchResult","inputRef","createElement","focus","keyOutsideFocus","clearSearch","activeElement","addEventListener","removeEventListener","searchHandler","searchQuery","result","isLocal","isURL","search","template","getState","splitQuery","match","encodeURIComponent","queries","q","searchParser","SearchContainer","onKeyUp","onDoubleClick","weatherTemplate","externalLastUpdate","tempC","tempF","cloud","conditionText","conditionCode","humidity","windK","windM","WeatherWidget","configLoading","weather","setWeather","setIsLoading","then","catch","err","socketProtocol","protocol","socketAddress","host","webSocketClient","WebSocket","onmessage","JSON","parse","close","WeatherDetails","Math","round","getDateTime","days","months","now","dateEl","getDay","getMonth","getDate","getFullYear","p","timeEl","getHours","getMinutes","getSeconds","separator","greeter","Header","dateTime","setDateTime","greeting","setGreeting","dateTimeInterval","setInterval","clearInterval","SettingsLink","HeaderMain","Home","appsLoading","bookmarksLoading","localSearch","setAppSearchResult","setBookmarkSearchResult","RegExp","flat","some","c","HomeSpace","SettingsButton","AppForm","useCustomIcon","toggleUseCustomIcon","customIcon","setCustomIcon","setFormData","inputChangeHandler","preventDefault","createFormData","FormData","append","htmlFor","placeholder","required","onChange","files","fileChangeHandler","accept","Switch","TableActions","entity","deleteHandler","updateHandler","pinHanlder","changeVisibilty","showPin","_pinHandler","TableAction","AppTable","localApps","setLocalApps","deleteAppHandler","confirm","updateAppHandler","openFormForUpdating","pinAppHandler","changeAppVisibiltyHandler","onDragEnd","destination","tmpApps","splice","movedApp","droppableId","provided","draggableId","snapshot","border","isDragging","borderRadius","draggableProps","dragHandleProps","Apps","modalIsOpen","setModalIsOpen","showTable","setShowTable","toggleModal","ActionsContainer","ThemePreview","applyTheme","ColorsPreview","ColorPreview","backgroundColor","Themer","formSubmitHandler","ThemerGrid","idx","WeatherSettings","step","lang","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","UISettings","AuthForm","tokenExpires","setTokenExpires","password","duration","passwordInputRef","expiresIn","d","parseTokenExpire","autoComplete","AppDetails","StyleSettings","customStyles","setCustomStyles","styles","spellCheck","QueriesForm","CustomQueries","editableQuery","setEditableQuery","QueriesGrid","Separator","ActionIcons","GeneralSettings","marginBottom","isCustom","DockerSettings","ProtectedRoute","rest","Settings","tabs","routes","r","authRequired","SettingsNav","dest","SettingsNavLink","activeClassName","SettingsNavLinkActive","exact","SettingsContent","component","CategoryForm","BookmarksForm","checkCategory","Form","contentType","inUpdate","BookmarksTable","localBookmarks","setLocalBookmarks","deleteBookmarkHandler","updateBookmarkHandler","changeBookmarkVisibiltyHandler","tmpBookmarks","movedBookmark","CategoryTable","localCategories","setLocalCategories","deleteCategoryHandler","updateCategoryHandler","pinCategoryHandler","changeCategoryVisibiltyHandler","tmpCategories","movedCategory","formContentType","setFormContentType","isInUpdate","setIsInUpdate","tableContentType","setTableContentType","openFormForAdding","NotificationCenter","App","dispath","tokenIsValid","getTime","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.974e8d9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsHeadline\":\"SettingsHeadline_SettingsHeadline__1VqV-\"};","export enum ActionType {\n  // THEME\n  setTheme = 'SET_THEME',\n  // CONFIG\n  getConfig = 'GET_CONFIG',\n  updateConfig = 'UPDATE_CONFIG',\n  // QUERIES\n  addQuery = 'ADD_QUERY',\n  deleteQuery = 'DELETE_QUERY',\n  fetchQueries = 'FETCH_QUERIES',\n  updateQuery = 'UPDATE_QUERY',\n  // NOTIFICATIONS\n  createNotification = 'CREATE_NOTIFICATION',\n  clearNotification = 'CLEAR_NOTIFICATION',\n  // APPS\n  getApps = 'GET_APPS',\n  getAppsSuccess = 'GET_APPS_SUCCESS',\n  getAppsError = 'GET_APPS_ERROR',\n  pinApp = 'PIN_APP',\n  addApp = 'ADD_APP',\n  addAppSuccess = 'ADD_APP_SUCCESS',\n  deleteApp = 'DELETE_APP',\n  updateApp = 'UPDATE_APP',\n  reorderApps = 'REORDER_APPS',\n  sortApps = 'SORT_APPS',\n  setEditApp = 'SET_EDIT_APP',\n  // CATEGORES\n  getCategories = 'GET_CATEGORIES',\n  getCategoriesSuccess = 'GET_CATEGORIES_SUCCESS',\n  getCategoriesError = 'GET_CATEGORIES_ERROR',\n  addCategory = 'ADD_CATEGORY',\n  pinCategory = 'PIN_CATEGORY',\n  deleteCategory = 'DELETE_CATEGORY',\n  updateCategory = 'UPDATE_CATEGORY',\n  sortCategories = 'SORT_CATEGORIES',\n  reorderCategories = 'REORDER_CATEGORIES',\n  setEditCategory = 'SET_EDIT_CATEGORY',\n  // BOOKMARKS\n  addBookmark = 'ADD_BOOKMARK',\n  deleteBookmark = 'DELETE_BOOKMARK',\n  updateBookmark = 'UPDATE_BOOKMARK',\n  setEditBookmark = 'SET_EDIT_BOOKMARK',\n  reorderBookmarks = 'REORDER_BOOKMARKS',\n  sortBookmarks = 'SORT_BOOKMARKS',\n  // AUTH\n  login = 'LOGIN',\n  logout = 'LOGOUT',\n  autoLogin = 'AUTO_LOGIN',\n  authError = 'AUTH_ERROR',\n}\n","import { Action } from '../actions';\nimport { ActionType } from '../action-types';\nimport { Theme } from '../../interfaces/Theme';\n\ninterface ThemeState {\n  theme: Theme;\n}\n\nconst initialState: ThemeState = {\n  theme: {\n    name: 'tron',\n    colors: {\n      background: '#242B33',\n      primary: '#EFFBFF',\n      accent: '#6EE2FF',\n    },\n  },\n};\n\nexport const themeReducer = (\n  state: ThemeState = initialState,\n  action: Action\n): ThemeState => {\n  switch (action.type) {\n    case ActionType.setTheme:\n      return { theme: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { IconKey } from 'skycons-ts';\n\nexport interface WeatherCondition {\n  code: number;\n  icon: {\n    day: IconKey;\n    night: IconKey;\n  }\n}\n\nexport enum TimeOfDay {\n  day,\n  night\n}\n\nexport class IconMapping {\n  private conditions: WeatherCondition[] = [\n    {\n      code: 1000,\n      icon: {\n        day: 'clear-day',\n        night: 'clear-night'\n      }\n    },\n    {\n      code: 1003,\n      icon: {\n        day: 'partly-cloudy-day',\n        night: 'partly-cloudy-night'\n      }\n    },\n    {\n      code: 1006,\n      icon: {\n        day: 'cloudy',\n        night: 'cloudy'\n      }\n    },\n    {\n      code: 1009,\n      icon: {\n        day: 'cloudy',\n        night: 'cloudy'\n      }\n    },\n    {\n      code: 1030,\n      icon: {\n        day: 'fog',\n        night: 'fog'\n      }\n    },\n    {\n      code: 1063,\n      icon: {\n        day: 'rain-day',\n        night: 'rain-night'\n      }\n    },\n    {\n      code: 1066,\n      icon: {\n        day: 'snow-day',\n        night: 'snow-night'\n      }\n    },\n    {\n      code: 1069,\n      icon: {\n        day: 'rain-snow-day',\n        night: 'rain-snow-night'\n      }\n    },\n    {\n      code: 1072,\n      icon: {\n        day: 'sleet',\n        night: 'sleet'\n      }\n    },\n    {\n      code: 1087,\n      icon: {\n        day: 'thunder-day',\n        night: 'thunder-night'\n      }\n    },\n    {\n      code: 1114,\n      icon: {\n        day: 'snow',\n        night: 'snow'\n      }\n    },\n    {\n      code: 1117,\n      icon: {\n        day: 'snow',\n        night: 'snow'\n      }\n    },\n    {\n      code: 1135,\n      icon: {\n        day: 'fog',\n        night: 'fog'\n      }\n    },\n    {\n      code: 1147,\n      icon: {\n        day: 'fog',\n        night: 'fog'\n      }\n    },\n    {\n      code: 1150,\n      icon: {\n        day: 'rain',\n        night: 'rain'\n      }\n    },\n    {\n      code: 1153,\n      icon: {\n        day: 'rain',\n        night: 'rain'\n      }\n    },\n    {\n      code: 1168,\n      icon: {\n        day: 'sleet',\n        night: 'sleet'\n      }\n    },\n    {\n      code: 1171,\n      icon: {\n        day: 'sleet',\n        night: 'sleet'\n      }\n    },\n    {\n      code: 1180,\n      icon: {\n        day: 'rain-day',\n        night: 'rain-night'\n      }\n    },\n    {\n      code: 1183,\n      icon: {\n        day: 'rain',\n        night: 'rain'\n      }\n    },\n    {\n      code: 1186,\n      icon: {\n        day: 'rain-day',\n        night: 'rain-night'\n      }\n    },\n    {\n      code: 1189,\n      icon: {\n        day: 'rain',\n        night: 'rain'\n      }\n    },\n    {\n      code: 1192,\n      icon: {\n        day: 'rain-day',\n        night: 'rain-night'\n      }\n    },\n    {\n      code: 1195,\n      icon: {\n        day: 'rain',\n        night: 'rain'\n      }\n    },\n    {\n      code: 1198,\n      icon: {\n        day: 'sleet',\n        night: 'sleet'\n      }\n    },\n    {\n      code: 1201,\n      icon: {\n        day: 'sleet',\n        night: 'sleet'\n      }\n    },\n    {\n      code: 1204,\n      icon: {\n        day: 'rain-snow',\n        night: 'rain-snow'\n      }\n    },\n    {\n      code: 1207,\n      icon: {\n        day: 'rain-snow',\n        night: 'rain-snow'\n      }\n    },\n    {\n      code: 1210,\n      icon: {\n        day: 'snow-day',\n        night: 'snow-night'\n      }\n    },\n    {\n      code: 1213,\n      icon: {\n        day: 'snow',\n        night: 'snow'\n      }\n    },\n    {\n      code: 1216,\n      icon: {\n        day: 'snow-day',\n        night: 'snow-night'\n      }\n    },\n    {\n      code: 1219,\n      icon: {\n        day: 'snow',\n        night: 'snow'\n      }\n    },\n    {\n      code: 1222,\n      icon: {\n        day: 'snow-day',\n        night: 'snow-night'\n      }\n    },\n    {\n      code: 1225,\n      icon: {\n        day: 'snow',\n        night: 'snow'\n      }\n    },\n    {\n      code: 1237,\n      icon: {\n        day: 'hail',\n        night: 'hail'\n      }\n    },\n    {\n      code: 1240,\n      icon: {\n        day: 'rain-day',\n        night: 'rain-night'\n      }\n    },\n    {\n      code: 1243,\n      icon: {\n        day: 'rain-day',\n        night: 'rain-night'\n      }\n    },\n    {\n      code: 1246,\n      icon: {\n        day: 'rain-day',\n        night: 'rain-night'\n      }\n    },\n    {\n      code: 1249,\n      icon: {\n        day: 'rain-snow-day',\n        night: 'rain-snow-night'\n      }\n    },\n    {\n      code: 1252,\n      icon: {\n        day: 'rain-snow-day',\n        night: 'rain-snow-night'\n      }\n    },\n    {\n      code: 1255,\n      icon: {\n        day: 'snow-day',\n        night: 'snow-night'\n      }\n    },\n    {\n      code: 1258,\n      icon: {\n        day: 'snow-day',\n        night: 'snow-night'\n      }\n    },\n    {\n      code: 1261,\n      icon: {\n        day: 'hail',\n        night: 'hail'\n      }\n    },\n    {\n      code: 1264,\n      icon: {\n        day: 'hail',\n        night: 'hail'\n      }\n    },\n    {\n      code: 1273,\n      icon: {\n        day: 'thunder-rain-day',\n        night: 'thunder-rain-night'\n      }\n    },\n    {\n      code: 1276,\n      icon: {\n        day: 'thunder-rain',\n        night: 'thunder-rain'\n      }\n    },\n    {\n      code: 1279,\n      icon: {\n        day: 'thunder-day',\n        night: 'thunder-night'\n      }\n    },\n    {\n      code: 1282,\n      icon: {\n        day: 'thunder',\n        night: 'thunder'\n      }\n    }\n  ];\n\n  mapIcon(weatherStatusCode: number, timeOfDay: TimeOfDay): IconKey {\n    const mapping = this.conditions.find((condition: WeatherCondition) => condition.code === weatherStatusCode);\n\n    if (mapping) {\n      if (timeOfDay === TimeOfDay.day) {\n        return mapping.icon.day;\n      } else if (timeOfDay === TimeOfDay.night) {\n        return mapping.icon.night;\n      }\n    }\n\n    return 'clear-day';\n  }\n}","/**\n * Parse Material Desgin icon name to be used with mdi/js\n * @param mdiName Dash separated icon name from MDI, e.g. alert-box-outline\n * @returns Parsed icon name to be used with mdi/js, e.g mdiAlertBoxOutline\n */\nexport const iconParser = (mdiName: string): string => {\n  let parsedName = mdiName\n    .split('-')\n    .map((word: string) => `${word[0].toUpperCase()}${word.slice(1)}`)\n    .join('');\n  parsedName = `mdi${parsedName}`;\n\n  return parsedName;\n}","const hasProtocol = (url: string): boolean => /^\\w+:\\/\\//.test(url);\nconst isSteamUrl = (url: string): boolean => /^steam:\\/\\//.test(url);\nconst isWebUrl = (url: string): boolean => /^https?:\\/\\//.test(url);\n\nexport const urlParser = (url: string): string[] => {\n  if (!hasProtocol(url)) {\n    // No protocol -> apply http:// prefix\n    url = `http://${url}`;\n  }\n\n  // Create simplified url to display as text\n  let displayUrl: string;\n  if (isSteamUrl(url)) {\n    displayUrl = 'Run Steam App';\n  } else if (isWebUrl(url)) {\n    displayUrl = url\n      .replace(/https?:\\/\\//, '')\n      .replace('www.', '')\n      .replace(/\\/$/, '');\n  } else displayUrl = url;\n\n  return [displayUrl, url];\n};\n","import { Dispatch } from 'redux';\nimport { SetThemeAction } from '../actions/theme';\nimport { ActionType } from '../action-types';\nimport { Theme } from '../../interfaces/Theme';\nimport { themes } from '../../components/Settings/Themer/themes.json';\n\nexport const setTheme =\n  (name: string, remeberTheme: boolean = true) =>\n  (dispatch: Dispatch<SetThemeAction>) => {\n    const theme = themes.find((theme) => theme.name === name);\n\n    if (theme) {\n      if (remeberTheme) {\n        localStorage.setItem('theme', name);\n      }\n\n      loadTheme(theme);\n\n      dispatch({\n        type: ActionType.setTheme,\n        payload: theme,\n      });\n    }\n  };\n\nexport const loadTheme = (theme: Theme): void => {\n  for (const [key, value] of Object.entries(theme.colors)) {\n    document.body.style.setProperty(`--color-${key}`, value);\n  }\n};\n","import { Dispatch } from 'redux';\nimport {\n  AddQueryAction,\n  DeleteQueryAction,\n  FetchQueriesAction,\n  GetConfigAction,\n  UpdateConfigAction,\n  UpdateQueryAction,\n} from '../actions/config';\nimport axios from 'axios';\nimport { ApiResponse, Config, Query } from '../../interfaces';\nimport { ActionType } from '../action-types';\nimport { storeUIConfig, applyAuth } from '../../utility';\nimport { ConfigFormData } from '../../types';\n\nconst keys: (keyof Config)[] = [\n  'useAmericanDate',\n  'greetingsSchema',\n  'daySchema',\n  'monthSchema',\n  'showTime',\n  'hideDate',\n];\n\nexport const getConfig = () => async (dispatch: Dispatch<GetConfigAction>) => {\n  try {\n    const res = await axios.get<ApiResponse<Config>>('/api/config');\n\n    dispatch({\n      type: ActionType.getConfig,\n      payload: res.data.data,\n    });\n\n    // Set custom page title if set\n    document.title = res.data.data.customTitle;\n\n    // Store settings for priority UI elements\n    for (let key of keys) {\n      storeUIConfig(key, res.data.data);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateConfig =\n  (formData: ConfigFormData) =>\n  async (dispatch: Dispatch<UpdateConfigAction>) => {\n    try {\n      const res = await axios.put<ApiResponse<Config>>(\n        '/api/config',\n        formData,\n        {\n          headers: applyAuth(),\n        }\n      );\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: 'Settings updated',\n        },\n      });\n\n      dispatch({\n        type: ActionType.updateConfig,\n        payload: res.data.data,\n      });\n\n      // Store settings for priority UI elements\n      for (let key of keys) {\n        storeUIConfig(key, res.data.data);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const fetchQueries =\n  () => async (dispatch: Dispatch<FetchQueriesAction>) => {\n    try {\n      const res = await axios.get<ApiResponse<Query[]>>('/api/queries');\n\n      dispatch({\n        type: ActionType.fetchQueries,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const addQuery =\n  (query: Query) => async (dispatch: Dispatch<AddQueryAction>) => {\n    try {\n      const res = await axios.post<ApiResponse<Query>>('/api/queries', query, {\n        headers: applyAuth(),\n      });\n\n      dispatch({\n        type: ActionType.addQuery,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const deleteQuery =\n  (prefix: string) => async (dispatch: Dispatch<DeleteQueryAction>) => {\n    try {\n      const res = await axios.delete<ApiResponse<Query[]>>(\n        `/api/queries/${prefix}`,\n        {\n          headers: applyAuth(),\n        }\n      );\n\n      dispatch({\n        type: ActionType.deleteQuery,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const updateQuery =\n  (query: Query, oldPrefix: string) =>\n  async (dispatch: Dispatch<UpdateQueryAction>) => {\n    try {\n      const res = await axios.put<ApiResponse<Query[]>>(\n        `/api/queries/${oldPrefix}`,\n        query,\n        {\n          headers: applyAuth(),\n        }\n      );\n\n      dispatch({\n        type: ActionType.updateQuery,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n","import { Dispatch } from 'redux';\nimport { NewNotification } from '../../interfaces';\nimport { ActionType } from '../action-types';\nimport {\n  CreateNotificationAction,\n  ClearNotificationAction,\n} from '../actions/notification';\n\nexport const createNotification =\n  (notification: NewNotification) =>\n  (dispatch: Dispatch<CreateNotificationAction>) => {\n    dispatch({\n      type: ActionType.createNotification,\n      payload: notification,\n    });\n  };\n\nexport const clearNotification =\n  (id: number) => (dispatch: Dispatch<ClearNotificationAction>) => {\n    dispatch({\n      type: ActionType.clearNotification,\n      payload: id,\n    });\n  };\n","import { ActionType } from '../action-types';\nimport { Dispatch } from 'redux';\nimport { ApiResponse, App, Config, NewApp } from '../../interfaces';\nimport {\n  AddAppAction,\n  DeleteAppAction,\n  GetAppsAction,\n  PinAppAction,\n  ReorderAppsAction,\n  SetEditAppAction,\n  SortAppsAction,\n  UpdateAppAction,\n} from '../actions/app';\nimport axios from 'axios';\nimport { applyAuth } from '../../utility';\n\nexport const getApps =\n  () => async (dispatch: Dispatch<GetAppsAction<undefined | App[]>>) => {\n    dispatch({\n      type: ActionType.getApps,\n      payload: undefined,\n    });\n\n    try {\n      const res = await axios.get<ApiResponse<App[]>>('/api/apps', {\n        headers: applyAuth(),\n      });\n\n      dispatch({\n        type: ActionType.getAppsSuccess,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const pinApp =\n  (app: App) => async (dispatch: Dispatch<PinAppAction>) => {\n    try {\n      const { id, isPinned, name } = app;\n      const res = await axios.put<ApiResponse<App>>(\n        `/api/apps/${id}`,\n        {\n          isPinned: !isPinned,\n        },\n        {\n          headers: applyAuth(),\n        }\n      );\n\n      const status = isPinned\n        ? 'unpinned from Homescreen'\n        : 'pinned to Homescreen';\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `App ${name} ${status}`,\n        },\n      });\n\n      dispatch({\n        type: ActionType.pinApp,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const addApp =\n  (formData: NewApp | FormData) => async (dispatch: Dispatch<AddAppAction>) => {\n    try {\n      const res = await axios.post<ApiResponse<App>>('/api/apps', formData, {\n        headers: applyAuth(),\n      });\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `App added`,\n        },\n      });\n\n      await dispatch({\n        type: ActionType.addAppSuccess,\n        payload: res.data.data,\n      });\n\n      // Sort apps\n      dispatch<any>(sortApps());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const deleteApp =\n  (id: number) => async (dispatch: Dispatch<DeleteAppAction>) => {\n    try {\n      await axios.delete<ApiResponse<{}>>(`/api/apps/${id}`, {\n        headers: applyAuth(),\n      });\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: 'App deleted',\n        },\n      });\n\n      dispatch({\n        type: ActionType.deleteApp,\n        payload: id,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const updateApp =\n  (id: number, formData: NewApp | FormData) =>\n  async (dispatch: Dispatch<UpdateAppAction>) => {\n    try {\n      const res = await axios.put<ApiResponse<App>>(\n        `/api/apps/${id}`,\n        formData,\n        {\n          headers: applyAuth(),\n        }\n      );\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `App updated`,\n        },\n      });\n\n      await dispatch({\n        type: ActionType.updateApp,\n        payload: res.data.data,\n      });\n\n      // Sort apps\n      dispatch<any>(sortApps());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const reorderApps =\n  (apps: App[]) => async (dispatch: Dispatch<ReorderAppsAction>) => {\n    interface ReorderQuery {\n      apps: {\n        id: number;\n        orderId: number;\n      }[];\n    }\n\n    try {\n      const updateQuery: ReorderQuery = { apps: [] };\n\n      apps.forEach((app, index) =>\n        updateQuery.apps.push({\n          id: app.id,\n          orderId: index + 1,\n        })\n      );\n\n      await axios.put<ApiResponse<{}>>('/api/apps/0/reorder', updateQuery, {\n        headers: applyAuth(),\n      });\n\n      dispatch({\n        type: ActionType.reorderApps,\n        payload: apps,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const sortApps = () => async (dispatch: Dispatch<SortAppsAction>) => {\n  try {\n    const res = await axios.get<ApiResponse<Config>>('/api/config');\n\n    dispatch({\n      type: ActionType.sortApps,\n      payload: res.data.data.useOrdering,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const setEditApp =\n  (app: App | null) => (dispatch: Dispatch<SetEditAppAction>) => {\n    dispatch({\n      type: ActionType.setEditApp,\n      payload: app,\n    });\n  };\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { applyAuth } from '../../utility';\nimport { ActionType } from '../action-types';\n\nimport {\n  ApiResponse,\n  Bookmark,\n  Category,\n  Config,\n  NewBookmark,\n  NewCategory,\n} from '../../interfaces';\n\nimport {\n  AddBookmarkAction,\n  AddCategoryAction,\n  DeleteBookmarkAction,\n  DeleteCategoryAction,\n  GetCategoriesAction,\n  PinCategoryAction,\n  ReorderBookmarksAction,\n  ReorderCategoriesAction,\n  SetEditBookmarkAction,\n  SetEditCategoryAction,\n  SortBookmarksAction,\n  SortCategoriesAction,\n  UpdateBookmarkAction,\n  UpdateCategoryAction,\n} from '../actions/bookmark';\n\nexport const getCategories =\n  () =>\n  async (dispatch: Dispatch<GetCategoriesAction<undefined | Category[]>>) => {\n    dispatch({\n      type: ActionType.getCategories,\n      payload: undefined,\n    });\n\n    try {\n      const res = await axios.get<ApiResponse<Category[]>>('/api/categories', {\n        headers: applyAuth(),\n      });\n\n      dispatch({\n        type: ActionType.getCategoriesSuccess,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const addCategory =\n  (formData: NewCategory) => async (dispatch: Dispatch<AddCategoryAction>) => {\n    try {\n      const res = await axios.post<ApiResponse<Category>>(\n        '/api/categories',\n        formData,\n        { headers: applyAuth() }\n      );\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `Category ${formData.name} created`,\n        },\n      });\n\n      dispatch({\n        type: ActionType.addCategory,\n        payload: res.data.data,\n      });\n\n      dispatch<any>(sortCategories());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const addBookmark =\n  (formData: NewBookmark | FormData) =>\n  async (dispatch: Dispatch<AddBookmarkAction>) => {\n    try {\n      const res = await axios.post<ApiResponse<Bookmark>>(\n        '/api/bookmarks',\n        formData,\n        { headers: applyAuth() }\n      );\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `Bookmark created`,\n        },\n      });\n\n      dispatch({\n        type: ActionType.addBookmark,\n        payload: res.data.data,\n      });\n\n      dispatch<any>(sortBookmarks(res.data.data.categoryId));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const pinCategory =\n  (category: Category) => async (dispatch: Dispatch<PinCategoryAction>) => {\n    try {\n      const { id, isPinned, name } = category;\n      const res = await axios.put<ApiResponse<Category>>(\n        `/api/categories/${id}`,\n        { isPinned: !isPinned },\n        { headers: applyAuth() }\n      );\n\n      const status = isPinned\n        ? 'unpinned from Homescreen'\n        : 'pinned to Homescreen';\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `Category ${name} ${status}`,\n        },\n      });\n\n      dispatch({\n        type: ActionType.pinCategory,\n        payload: res.data.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const deleteCategory =\n  (id: number) => async (dispatch: Dispatch<DeleteCategoryAction>) => {\n    try {\n      await axios.delete<ApiResponse<{}>>(`/api/categories/${id}`, {\n        headers: applyAuth(),\n      });\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `Category deleted`,\n        },\n      });\n\n      dispatch({\n        type: ActionType.deleteCategory,\n        payload: id,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const updateCategory =\n  (id: number, formData: NewCategory) =>\n  async (dispatch: Dispatch<UpdateCategoryAction>) => {\n    try {\n      const res = await axios.put<ApiResponse<Category>>(\n        `/api/categories/${id}`,\n        formData,\n        { headers: applyAuth() }\n      );\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `Category ${formData.name} updated`,\n        },\n      });\n\n      dispatch({\n        type: ActionType.updateCategory,\n        payload: res.data.data,\n      });\n\n      dispatch<any>(sortCategories());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const deleteBookmark =\n  (bookmarkId: number, categoryId: number) =>\n  async (dispatch: Dispatch<DeleteBookmarkAction>) => {\n    try {\n      await axios.delete<ApiResponse<{}>>(`/api/bookmarks/${bookmarkId}`, {\n        headers: applyAuth(),\n      });\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: 'Bookmark deleted',\n        },\n      });\n\n      dispatch({\n        type: ActionType.deleteBookmark,\n        payload: {\n          bookmarkId,\n          categoryId,\n        },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const updateBookmark =\n  (\n    bookmarkId: number,\n    formData: NewBookmark | FormData,\n    category: {\n      prev: number;\n      curr: number;\n    }\n  ) =>\n  async (\n    dispatch: Dispatch<\n      DeleteBookmarkAction | AddBookmarkAction | UpdateBookmarkAction\n    >\n  ) => {\n    try {\n      const res = await axios.put<ApiResponse<Bookmark>>(\n        `/api/bookmarks/${bookmarkId}`,\n        formData,\n        { headers: applyAuth() }\n      );\n\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Success',\n          message: `Bookmark updated`,\n        },\n      });\n\n      // Check if category was changed\n      const categoryWasChanged = category.curr !== category.prev;\n\n      if (categoryWasChanged) {\n        // Delete bookmark from old category\n        dispatch({\n          type: ActionType.deleteBookmark,\n          payload: {\n            bookmarkId,\n            categoryId: category.prev,\n          },\n        });\n\n        // Add bookmark to the new category\n        dispatch({\n          type: ActionType.addBookmark,\n          payload: res.data.data,\n        });\n      } else {\n        // Else update only name/url/icon\n        dispatch({\n          type: ActionType.updateBookmark,\n          payload: res.data.data,\n        });\n      }\n\n      dispatch<any>(sortBookmarks(res.data.data.categoryId));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const sortCategories =\n  () => async (dispatch: Dispatch<SortCategoriesAction>) => {\n    try {\n      const res = await axios.get<ApiResponse<Config>>('/api/config');\n\n      dispatch({\n        type: ActionType.sortCategories,\n        payload: res.data.data.useOrdering,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const reorderCategories =\n  (categories: Category[]) =>\n  async (dispatch: Dispatch<ReorderCategoriesAction>) => {\n    interface ReorderQuery {\n      categories: {\n        id: number;\n        orderId: number;\n      }[];\n    }\n\n    try {\n      const updateQuery: ReorderQuery = { categories: [] };\n\n      categories.forEach((category, index) =>\n        updateQuery.categories.push({\n          id: category.id,\n          orderId: index + 1,\n        })\n      );\n\n      await axios.put<ApiResponse<{}>>(\n        '/api/categories/0/reorder',\n        updateQuery,\n        { headers: applyAuth() }\n      );\n\n      dispatch({\n        type: ActionType.reorderCategories,\n        payload: categories,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const setEditCategory =\n  (category: Category | null) =>\n  (dispatch: Dispatch<SetEditCategoryAction>) => {\n    dispatch({\n      type: ActionType.setEditCategory,\n      payload: category,\n    });\n  };\n\nexport const setEditBookmark =\n  (bookmark: Bookmark | null) =>\n  (dispatch: Dispatch<SetEditBookmarkAction>) => {\n    dispatch({\n      type: ActionType.setEditBookmark,\n      payload: bookmark,\n    });\n  };\n\nexport const reorderBookmarks =\n  (bookmarks: Bookmark[], categoryId: number) =>\n  async (dispatch: Dispatch<ReorderBookmarksAction>) => {\n    interface ReorderQuery {\n      bookmarks: {\n        id: number;\n        orderId: number;\n      }[];\n    }\n\n    try {\n      const updateQuery: ReorderQuery = { bookmarks: [] };\n\n      bookmarks.forEach((bookmark, index) =>\n        updateQuery.bookmarks.push({\n          id: bookmark.id,\n          orderId: index + 1,\n        })\n      );\n\n      await axios.put<ApiResponse<{}>>(\n        '/api/bookmarks/0/reorder',\n        updateQuery,\n        { headers: applyAuth() }\n      );\n\n      dispatch({\n        type: ActionType.reorderBookmarks,\n        payload: { bookmarks, categoryId },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const sortBookmarks =\n  (categoryId: number) => async (dispatch: Dispatch<SortBookmarksAction>) => {\n    try {\n      const res = await axios.get<ApiResponse<Config>>('/api/config');\n\n      dispatch({\n        type: ActionType.sortBookmarks,\n        payload: {\n          orderType: res.data.data.useOrdering,\n          categoryId,\n        },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n","import { Dispatch } from 'redux';\nimport { ApiResponse } from '../../interfaces';\nimport { ActionType } from '../action-types';\nimport {\n  AuthErrorAction,\n  AutoLoginAction,\n  LoginAction,\n  LogoutAction,\n} from '../actions/auth';\nimport axios, { AxiosError } from 'axios';\nimport { getApps, getCategories } from '.';\n\nexport const login =\n  (formData: { password: string; duration: string }) =>\n  async (dispatch: Dispatch<LoginAction>) => {\n    try {\n      const res = await axios.post<ApiResponse<{ token: string }>>(\n        '/api/auth',\n        formData\n      );\n\n      localStorage.setItem('token', res.data.data.token);\n\n      dispatch({\n        type: ActionType.login,\n        payload: res.data.data.token,\n      });\n\n      dispatch<any>(getApps());\n      dispatch<any>(getCategories());\n    } catch (err) {\n      dispatch<any>(authError(err, true));\n    }\n  };\n\nexport const logout = () => (dispatch: Dispatch<LogoutAction>) => {\n  localStorage.removeItem('token');\n\n  dispatch({\n    type: ActionType.logout,\n  });\n\n  dispatch<any>(getApps());\n  dispatch<any>(getCategories());\n};\n\nexport const autoLogin = () => async (dispatch: Dispatch<AutoLoginAction>) => {\n  const token: string = localStorage.token;\n\n  try {\n    await axios.post<ApiResponse<{ token: { isValid: boolean } }>>(\n      '/api/auth/validate',\n      { token }\n    );\n\n    dispatch({\n      type: ActionType.autoLogin,\n      payload: token,\n    });\n\n    dispatch<any>(getApps());\n    dispatch<any>(getCategories());\n  } catch (err) {\n    dispatch<any>(authError(err, false));\n  }\n};\n\nexport const authError =\n  (error: unknown, showNotification: boolean) =>\n  (dispatch: Dispatch<AuthErrorAction>) => {\n    const apiError = error as AxiosError;\n\n    if (showNotification) {\n      dispatch<any>({\n        type: ActionType.createNotification,\n        payload: {\n          title: 'Error',\n          message: apiError.response?.data.error,\n        },\n      });\n    }\n\n    dispatch<any>(getApps());\n    dispatch<any>(getCategories());\n  };\n","import axios from 'axios';\nimport { store } from '../store/store';\nimport { createNotification } from '../store/action-creators';\n\nexport const checkVersion = async (isForced: boolean = false) => {\n  try {\n    const res = await axios.get<string>(\n      'https://raw.githubusercontent.com/pawelmalak/flame/master/client/.env'\n    );\n\n    const githubVersion = res.data\n      .split('\\n')\n      .map((pair) => pair.split('='))[0][1];\n\n    if (githubVersion !== process.env.REACT_APP_VERSION) {\n      store.dispatch<any>(\n        createNotification({\n          title: 'Info',\n          message: 'New version is available!',\n          url: 'https://github.com/pawelmalak/flame/blob/master/CHANGELOG.md',\n        })\n      );\n    } else if (isForced) {\n      store.dispatch<any>(\n        createNotification({\n          title: 'Info',\n          message: 'You are using the latest version!',\n        })\n      );\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n","interface Data {\n  name: string;\n  orderId: number;\n  createdAt: Date;\n}\n\nexport const sortData = <T extends Data>(array: T[], field: string): T[] => {\n  const sortedData = array.slice();\n\n  if (field === 'name') {\n    sortedData.sort((a: T, b: T) => {\n      return a.name.localeCompare(b.name, 'en', { sensitivity: 'base' })\n    })\n  } else if (field === 'orderId') {\n    sortedData.sort((a: T, b: T) => {\n      if (a.orderId < b.orderId) { return -1 }\n      if (a.orderId > b.orderId) { return 1 }\n      return 0;\n    })\n  } else {\n    sortedData.sort((a: T, b: T) => {\n      if (a.createdAt < b.createdAt) { return -1 }\n      if (a.createdAt > b.createdAt) { return 1 }\n      return 0;\n    })\n  }\n\n  return sortedData;\n}","import { urlParser } from '.';\n\nexport const redirectUrl = (url: string, sameTab: boolean) => {\n  const parsedUrl = urlParser(url)[1];\n\n  if (sameTab) {\n    document.location.replace(parsedUrl);\n  } else {\n    window.open(parsedUrl);\n  }\n};\n","import {\n  DockerSettingsForm,\n  UISettingsForm,\n  GeneralForm,\n  ThemeSettingsForm,\n  WeatherForm,\n} from '../../interfaces';\n\nexport const uiSettingsTemplate: UISettingsForm = {\n  customTitle: document.title,\n  hideHeader: false,\n  hideApps: false,\n  hideCategories: false,\n  useAmericanDate: false,\n  greetingsSchema: 'Good evening!;Good afternoon!;Good morning!;Good night!',\n  daySchema: 'Sunday;Monday;Tuesday;Wednesday;Thursday;Friday;Saturday',\n  monthSchema:\n    'January;February;March;April;May;June;July;August;September;October;November;December',\n  showTime: false,\n  hideDate: false,\n  hideSearch: false,\n  disableAutofocus: false,\n};\n\nexport const weatherSettingsTemplate: WeatherForm = {\n  WEATHER_API_KEY: '',\n  lat: 0,\n  long: 0,\n  isCelsius: true,\n  weatherData: 'cloud',\n};\n\nexport const generalSettingsTemplate: GeneralForm = {\n  searchSameTab: false,\n  defaultSearchProvider: 'l',\n  pinAppsByDefault: true,\n  pinCategoriesByDefault: true,\n  useOrdering: 'createdAt',\n  appsSameTab: false,\n  bookmarksSameTab: false,\n};\n\nexport const dockerSettingsTemplate: DockerSettingsForm = {\n  dockerApps: true,\n  dockerHost: 'localhost',\n  kubernetesApps: true,\n  unpinStoppedApps: true,\n};\n\nexport const themeSettingsTemplate: ThemeSettingsForm = {\n  defaultTheme: 'tron',\n};\n","import { App, NewApp } from '../../interfaces';\n\nexport const newAppTemplate: NewApp = {\n  name: '',\n  url: '',\n  icon: '',\n  isPublic: true,\n  description: '',\n};\n\nexport const appTemplate: App = {\n  ...newAppTemplate,\n  isPinned: false,\n  orderId: 0,\n  id: -1,\n  createdAt: new Date(),\n  updatedAt: new Date(),\n};\n","import { Category, NewCategory } from '../../interfaces';\n\nexport const newCategoryTemplate: NewCategory = {\n  name: '',\n  isPublic: true,\n};\n\nexport const categoryTemplate: Category = {\n  ...newCategoryTemplate,\n  id: -1,\n  isPinned: false,\n  orderId: 0,\n  bookmarks: [],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n};\n","import { Bookmark, NewBookmark } from '../../interfaces';\n\nexport const newBookmarkTemplate: NewBookmark = {\n  name: '',\n  url: '',\n  categoryId: -1,\n  icon: '',\n  isPublic: true,\n};\n\nexport const bookmarkTemplate: Bookmark = {\n  ...newBookmarkTemplate,\n  id: -1,\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  orderId: 0,\n};\n","import { ChangeEvent, SetStateAction } from 'react';\n\ntype Event = ChangeEvent<HTMLInputElement | HTMLSelectElement>;\n\ninterface Options {\n  isNumber?: boolean;\n  isBool?: boolean;\n}\n\ninterface Params<T> {\n  e: Event;\n  options?: Options;\n  setStateHandler: (v: SetStateAction<T>) => void;\n  state: T;\n}\n\nexport const inputHandler = <T>(params: Params<T>): void => {\n  const { e, options, setStateHandler, state } = params;\n\n  const rawValue = e.target.value;\n  let value: string | number | boolean = e.target.value;\n\n  if (options) {\n    const { isNumber = false, isBool = false } = options;\n\n    if (isNumber) {\n      value = parseFloat(rawValue);\n    }\n\n    if (isBool) {\n      value = !!parseInt(rawValue);\n    }\n  }\n\n  setStateHandler({\n    ...state,\n    [e.target.name]: value,\n  });\n};\n","import { Config } from '../interfaces';\n\nexport const storeUIConfig = <K extends keyof Config>(\n  key: K,\n  config: Config\n) => {\n  localStorage.setItem(key, `${config[key]}`);\n};\n","export const isUrlOrIp = (data: string): boolean => {\n  const regex =\n    /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?|^((http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/i;\n\n  return regex.test(data);\n};\n\nexport const isUrl = (data: string): boolean => {\n  const regex =\n    /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/i;\n\n  return regex.test(data);\n};\n\nexport const isImage = (data: string): boolean => {\n  const regex = /.(jpeg|jpg|png|ico)$/i;\n\n  return regex.test(data);\n};\n\nexport const isSvg = (data: string): boolean => {\n  const regex = /.(svg)$/i;\n\n  return regex.test(data);\n};\n","export const parseTime = (time: number, ms = false) => {\n  if (ms) {\n    if (time >= 10 && time < 100) {\n      return `0${time}`;\n    } else if (time < 10) {\n      return `00${time}`;\n    }\n  }\n\n  return time < 10 ? `0${time}` : time.toString();\n};\n","import jwtDecode from 'jwt-decode';\nimport { parseTime } from '.';\nimport { Token } from '../interfaces';\n\nexport const decodeToken = (token: string): Token => {\n  const decoded = jwtDecode(token) as Token;\n\n  return decoded;\n};\n\nexport const parseTokenExpire = (expiresIn: number): string => {\n  const d = new Date(expiresIn * 1000);\n  const p = parseTime;\n\n  const useAmericanDate = localStorage.useAmericanDate === 'true';\n  const time = `${p(d.getHours())}:${p(d.getMinutes())}:${p(d.getSeconds())}`;\n\n  if (useAmericanDate) {\n    return `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()} ${time}`;\n  } else {\n    return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()} ${time}`;\n  }\n};\n","export const applyAuth = () => {\n  const token = localStorage.getItem('token') || '';\n  return { 'Authorization-Flame': `Bearer ${token}` };\n};\n","/**\n * https://stackoverflow.com/a/30851002/16957052\n */\nexport const escapeRegex = (exp: string) => {\n  return exp.replace(/[-[\\]{}()*+!<=:?.\\/\\\\^$|#\\s,]/g, '\\\\$&');\n};\n","import { Action } from '../actions';\nimport { ActionType } from '../action-types';\nimport { Config, Query } from '../../interfaces';\nimport { configTemplate } from '../../utility';\n\ninterface ConfigState {\n  loading: boolean;\n  config: Config;\n  customQueries: Query[];\n}\n\nconst initialState: ConfigState = {\n  loading: true,\n  config: { ...configTemplate },\n  customQueries: [],\n};\n\nexport const configReducer = (\n  state: ConfigState = initialState,\n  action: Action\n): ConfigState => {\n  switch (action.type) {\n    case ActionType.getConfig:\n      return {\n        ...state,\n        loading: false,\n        config: action.payload,\n      };\n\n    case ActionType.updateConfig:\n      return {\n        ...state,\n        config: action.payload,\n      };\n\n    case ActionType.fetchQueries:\n      return {\n        ...state,\n        customQueries: action.payload,\n      };\n\n    case ActionType.addQuery:\n      return {\n        ...state,\n        customQueries: [...state.customQueries, action.payload],\n      };\n\n    case ActionType.deleteQuery:\n      return {\n        ...state,\n        customQueries: action.payload,\n      };\n\n    case ActionType.updateQuery:\n      return {\n        ...state,\n        customQueries: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { Config } from '../../interfaces';\n\nexport const configTemplate: Config = {\n  WEATHER_API_KEY: '',\n  lat: 0,\n  long: 0,\n  isCelsius: true,\n  customTitle: 'Flame',\n  pinAppsByDefault: true,\n  pinCategoriesByDefault: true,\n  hideHeader: false,\n  useOrdering: 'createdAt',\n  appsSameTab: false,\n  bookmarksSameTab: false,\n  searchSameTab: false,\n  hideApps: false,\n  hideCategories: false,\n  hideSearch: false,\n  defaultSearchProvider: 'l',\n  dockerApps: false,\n  dockerHost: 'localhost',\n  kubernetesApps: false,\n  unpinStoppedApps: false,\n  useAmericanDate: false,\n  disableAutofocus: false,\n  greetingsSchema: 'Good evening!;Good afternoon!;Good morning!;Good night!',\n  daySchema: 'Sunday;Monday;Tuesday;Wednesday;Thursday;Friday;Saturday',\n  monthSchema:\n    'January;February;March;April;May;June;July;August;September;October;November;December',\n  showTime: false,\n  defaultTheme: 'tron',\n  isKilometer: true,\n  weatherData: 'cloud',\n  hideDate: false,\n};\n","import { Action } from '../actions';\nimport { ActionType } from '../action-types';\nimport { Notification } from '../../interfaces';\n\nexport interface NotificationState {\n  notifications: Notification[];\n  idCounter: number;\n}\n\nconst initialState: NotificationState = {\n  notifications: [],\n  idCounter: 0,\n};\n\nexport const notificationReducer = (\n  state: NotificationState = initialState,\n  action: Action\n): NotificationState => {\n  switch (action.type) {\n    case ActionType.createNotification:\n      return {\n        ...state,\n        notifications: [\n          ...state.notifications,\n          {\n            ...action.payload,\n            id: state.idCounter,\n          },\n        ],\n        idCounter: state.idCounter + 1,\n      };\n\n    case ActionType.clearNotification:\n      return {\n        ...state,\n        notifications: [...state.notifications].filter(\n          (notification) => notification.id !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n};\n","import { ActionType } from '../action-types';\nimport { Action } from '../actions/index';\nimport { App } from '../../interfaces';\nimport { sortData } from '../../utility';\n\ninterface AppsState {\n  loading: boolean;\n  apps: App[];\n  errors: string | undefined;\n  appInUpdate: App | null;\n}\n\nconst initialState: AppsState = {\n  loading: true,\n  apps: [],\n  errors: undefined,\n  appInUpdate: null,\n};\n\nexport const appsReducer = (\n  state: AppsState = initialState,\n  action: Action\n): AppsState => {\n  switch (action.type) {\n    case ActionType.getApps: {\n      return {\n        ...state,\n        loading: true,\n        errors: undefined,\n      };\n    }\n\n    case ActionType.getAppsSuccess: {\n      return {\n        ...state,\n        loading: false,\n        apps: action.payload || [],\n      };\n    }\n\n    case ActionType.pinApp: {\n      const appIdx = state.apps.findIndex(\n        (app) => app.id === action.payload.id\n      );\n\n      return {\n        ...state,\n        apps: [\n          ...state.apps.slice(0, appIdx),\n          action.payload,\n          ...state.apps.slice(appIdx + 1),\n        ],\n      };\n    }\n\n    case ActionType.addAppSuccess: {\n      return {\n        ...state,\n        apps: [...state.apps, action.payload],\n      };\n    }\n\n    case ActionType.deleteApp: {\n      return {\n        ...state,\n        apps: [...state.apps].filter((app) => app.id !== action.payload),\n      };\n    }\n\n    case ActionType.updateApp: {\n      const appIdx = state.apps.findIndex(\n        (app) => app.id === action.payload.id\n      );\n\n      return {\n        ...state,\n        apps: [\n          ...state.apps.slice(0, appIdx),\n          action.payload,\n          ...state.apps.slice(appIdx + 1),\n        ],\n      };\n    }\n\n    case ActionType.reorderApps: {\n      return {\n        ...state,\n        apps: action.payload,\n      };\n    }\n\n    case ActionType.sortApps: {\n      return {\n        ...state,\n        apps: sortData<App>(state.apps, action.payload),\n      };\n    }\n\n    case ActionType.setEditApp: {\n      return {\n        ...state,\n        appInUpdate: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { Bookmark, Category } from '../../interfaces';\nimport { sortData } from '../../utility';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface BookmarksState {\n  loading: boolean;\n  errors: string | undefined;\n  categories: Category[];\n  categoryInEdit: Category | null;\n  bookmarkInEdit: Bookmark | null;\n}\n\nconst initialState: BookmarksState = {\n  loading: true,\n  errors: undefined,\n  categories: [],\n  categoryInEdit: null,\n  bookmarkInEdit: null,\n};\n\nexport const bookmarksReducer = (\n  state: BookmarksState = initialState,\n  action: Action\n): BookmarksState => {\n  switch (action.type) {\n    case ActionType.getCategories: {\n      return {\n        ...state,\n        loading: true,\n        errors: undefined,\n      };\n    }\n\n    case ActionType.getCategoriesSuccess: {\n      return {\n        ...state,\n        loading: false,\n        categories: action.payload,\n      };\n    }\n\n    case ActionType.addCategory: {\n      return {\n        ...state,\n        categories: [...state.categories, { ...action.payload, bookmarks: [] }],\n      };\n    }\n\n    case ActionType.addBookmark: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload.categoryId\n      );\n\n      const targetCategory = {\n        ...state.categories[categoryIdx],\n        bookmarks: [...state.categories[categoryIdx].bookmarks, action.payload],\n      };\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          targetCategory,\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n        categoryInEdit: targetCategory,\n      };\n    }\n\n    case ActionType.pinCategory: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload.id\n      );\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          {\n            ...action.payload,\n            bookmarks: [...state.categories[categoryIdx].bookmarks],\n          },\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n      };\n    }\n\n    case ActionType.deleteCategory: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload\n      );\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n      };\n    }\n\n    case ActionType.updateCategory: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload.id\n      );\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          {\n            ...action.payload,\n            bookmarks: [...state.categories[categoryIdx].bookmarks],\n          },\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n      };\n    }\n\n    case ActionType.deleteBookmark: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload.categoryId\n      );\n\n      const targetCategory = {\n        ...state.categories[categoryIdx],\n        bookmarks: state.categories[categoryIdx].bookmarks.filter(\n          (bookmark) => bookmark.id !== action.payload.bookmarkId\n        ),\n      };\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          targetCategory,\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n        categoryInEdit: targetCategory,\n      };\n    }\n\n    case ActionType.updateBookmark: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload.categoryId\n      );\n\n      const bookmarkIdx = state.categories[categoryIdx].bookmarks.findIndex(\n        (bookmark) => bookmark.id === action.payload.id\n      );\n\n      const targetCategory = {\n        ...state.categories[categoryIdx],\n        bookmarks: [\n          ...state.categories[categoryIdx].bookmarks.slice(0, bookmarkIdx),\n          action.payload,\n          ...state.categories[categoryIdx].bookmarks.slice(bookmarkIdx + 1),\n        ],\n      };\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          targetCategory,\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n        categoryInEdit: targetCategory,\n      };\n    }\n\n    case ActionType.sortCategories: {\n      return {\n        ...state,\n        categories: sortData<Category>(state.categories, action.payload),\n      };\n    }\n\n    case ActionType.reorderCategories: {\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    }\n\n    case ActionType.setEditCategory: {\n      return {\n        ...state,\n        categoryInEdit: action.payload,\n      };\n    }\n\n    case ActionType.setEditBookmark: {\n      return {\n        ...state,\n        bookmarkInEdit: action.payload,\n      };\n    }\n\n    case ActionType.reorderBookmarks: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload.categoryId\n      );\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          {\n            ...state.categories[categoryIdx],\n            bookmarks: action.payload.bookmarks,\n          },\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n      };\n    }\n\n    case ActionType.sortBookmarks: {\n      const categoryIdx = state.categories.findIndex(\n        (category) => category.id === action.payload.categoryId\n      );\n\n      const sortedBookmarks = sortData<Bookmark>(\n        state.categories[categoryIdx].bookmarks,\n        action.payload.orderType\n      );\n\n      return {\n        ...state,\n        categories: [\n          ...state.categories.slice(0, categoryIdx),\n          {\n            ...state.categories[categoryIdx],\n            bookmarks: sortedBookmarks,\n          },\n          ...state.categories.slice(categoryIdx + 1),\n        ],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { Action } from '../actions';\nimport { ActionType } from '../action-types';\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  token: string | null;\n}\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  token: null,\n};\n\nexport const authReducer = (\n  state: AuthState = initialState,\n  action: Action\n): AuthState => {\n  switch (action.type) {\n    case ActionType.login:\n      return {\n        ...state,\n        token: action.payload,\n        isAuthenticated: true,\n      };\n\n    case ActionType.logout:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n      };\n\n    case ActionType.autoLogin:\n      return {\n        ...state,\n        token: action.payload,\n        isAuthenticated: true,\n      };\n\n    case ActionType.authError:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport { themeReducer } from './theme';\nimport { configReducer } from './config';\nimport { notificationReducer } from './notification';\nimport { appsReducer } from './app';\nimport { bookmarksReducer } from './bookmark';\nimport { authReducer } from './auth';\n\nexport const reducers = combineReducers({\n  theme: themeReducer,\n  config: configReducer,\n  notification: notificationReducer,\n  apps: appsReducer,\n  bookmarks: bookmarksReducer,\n  auth: authReducer,\n});\n\nexport type State = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\n\nexport const store = createStore(\n  reducers,\n  {},\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import classes from './Table.module.css';\n\ninterface Props {\n  children: React.ReactNode;\n  headers: string[];\n  innerRef?: any;\n}\n\nexport const Table = (props: Props): JSX.Element => {\n  return (\n    <div className={classes.TableContainer} ref={props.innerRef}>\n      <table className={classes.Table}>\n        <thead className={classes.TableHead}>\n          <tr>\n            {props.headers.map(\n              (header: string, index: number): JSX.Element => (\n                <th key={index}>{header}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes.TableBody}>{props.children}</tbody>\n      </table>\n    </div>\n  );\n};\n","import classes from './Spinner.module.css';\n\nexport const Spinner = (): JSX.Element => {\n  return (\n    <div className={classes.SpinnerWrapper}>\n      <div className={classes.Spinner}>Loading...</div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\nimport classes from './Notification.module.css';\n\ninterface Props {\n  title: string;\n  message: string;\n  id: number;\n  url: string | null;\n}\n\nexport const Notification = (props: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const { clearNotification } = bindActionCreators(actionCreators, dispatch);\n\n  const [isOpen, setIsOpen] = useState(true);\n  const elementClasses = [\n    classes.Notification,\n    isOpen ? classes.NotificationOpen : classes.NotificationClose,\n  ].join(' ');\n\n  useEffect(() => {\n    const closeNotification = setTimeout(() => {\n      setIsOpen(false);\n    }, 3500);\n\n    const clearNotificationTimeout = setTimeout(() => {\n      clearNotification(props.id);\n    }, 3600);\n\n    return () => {\n      window.clearTimeout(closeNotification);\n      window.clearTimeout(clearNotificationTimeout);\n    };\n  }, []);\n\n  const clickHandler = () => {\n    if (props.url) {\n      window.open(props.url, '_blank');\n    }\n  };\n\n  return (\n    <div className={elementClasses} onClick={clickHandler}>\n      <h4>{props.title}</h4>\n      <p>{props.message}</p>\n      <div className={classes.Pog}></div>\n    </div>\n  );\n};\n","import { MouseEvent, ReactNode, useRef } from 'react';\n\nimport classes from './Modal.module.css';\n\ninterface Props {\n  isOpen: boolean;\n  setIsOpen: Function;\n  children: ReactNode;\n}\n\nexport const Modal = (props: Props): JSX.Element => {\n  const modalRef = useRef(null);\n  const modalClasses = [\n    classes.Modal,\n    props.isOpen ? classes.ModalOpen : classes.ModalClose,\n  ].join(' ');\n\n  const clickHandler = (e: MouseEvent) => {\n    if (e.target === modalRef.current) {\n      props.setIsOpen(false);\n    }\n  };\n\n  return (\n    <div className={modalClasses} onClick={clickHandler} ref={modalRef}>\n      {props.children}\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport classes from './Layout.module.css';\n\ninterface ComponentProps {\n  children: ReactNode;\n}\n\nexport const Container = (props: ComponentProps): JSX.Element => {\n  return <div className={classes.Container}>{props.children}</div>;\n};\n","import classes from './Icon.module.css';\n\nimport { Icon as MDIcon } from '@mdi/react';\n\ninterface Props {\n  icon: string;\n  color?: string;\n}\n\nexport const Icon = (props: Props): JSX.Element => {\n  const MDIcons = require('@mdi/js');\n  let iconPath = MDIcons[props.icon];\n\n  if (!iconPath) {\n    console.log(`Icon ${props.icon} not found`);\n    iconPath = MDIcons.mdiCancel;\n  }\n\n  return (\n    <MDIcon\n      className={classes.Icon}\n      path={iconPath}\n      color={props.color ? props.color : 'var(--color-primary)'}\n    />\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../store';\n\n// Typescript\nimport { Category, Bookmark } from '../../interfaces';\n\n// CSS\nimport classes from './Bookmarks.module.css';\n\n// UI\nimport {\n  Container,\n  Headline,\n  ActionButton,\n  Spinner,\n  Modal,\n  Message,\n} from '../UI';\n\n// Components\nimport { BookmarkGrid } from './BookmarkGrid/BookmarkGrid';\nimport { Form } from './Form/Form';\nimport { Table } from './Table/Table';\n\ninterface Props {\n  searching: boolean;\n}\n\nexport enum ContentType {\n  category,\n  bookmark,\n}\n\nexport const Bookmarks = (props: Props): JSX.Element => {\n  // Get Redux state\n  const {\n    bookmarks: { loading, categories, categoryInEdit },\n    auth: { isAuthenticated },\n  } = useSelector((state: State) => state);\n\n  // Get Redux action creators\n  const dispatch = useDispatch();\n  const { getCategories, setEditCategory, setEditBookmark } =\n    bindActionCreators(actionCreators, dispatch);\n\n  // Load categories if array is empty\n  useEffect(() => {\n    if (!categories.length) {\n      getCategories();\n    }\n  }, []);\n\n  // Form\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [formContentType, setFormContentType] = useState(ContentType.category);\n  const [isInUpdate, setIsInUpdate] = useState(false);\n\n  // Table\n  const [showTable, setShowTable] = useState(false);\n  const [tableContentType, setTableContentType] = useState(\n    ContentType.category\n  );\n\n  // Observe if user is authenticated -> set default view (grid) if not\n  useEffect(() => {\n    if (!isAuthenticated) {\n      setShowTable(false);\n      setModalIsOpen(false);\n    }\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    if (categoryInEdit && !modalIsOpen) {\n      setTableContentType(ContentType.bookmark);\n      setShowTable(true);\n    }\n  }, [categoryInEdit]);\n\n  useEffect(() => {\n    setShowTable(false);\n    setEditCategory(null);\n  }, []);\n\n  // Form actions\n  const toggleModal = (): void => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const openFormForAdding = (contentType: ContentType) => {\n    setFormContentType(contentType);\n    setIsInUpdate(false);\n    toggleModal();\n  };\n\n  const openFormForUpdating = (data: Category | Bookmark): void => {\n    setIsInUpdate(true);\n\n    const instanceOfCategory = (object: any): object is Category => {\n      return 'bookmarks' in object;\n    };\n\n    if (instanceOfCategory(data)) {\n      setFormContentType(ContentType.category);\n      setEditCategory(data);\n    } else {\n      setFormContentType(ContentType.bookmark);\n      setEditBookmark(data);\n    }\n\n    toggleModal();\n  };\n\n  // Table actions\n  const showTableForEditing = (contentType: ContentType) => {\n    // We're in the edit mode and the same button was clicked - go back to list\n    if (showTable && contentType === tableContentType) {\n      setEditCategory(null);\n      setShowTable(false);\n    } else {\n      setShowTable(true);\n      setTableContentType(contentType);\n    }\n  };\n\n  const finishEditing = () => {\n    setShowTable(false);\n    setEditCategory(null);\n  };\n\n  return (\n    <Container>\n      <Modal isOpen={modalIsOpen} setIsOpen={toggleModal}>\n        <Form\n          modalHandler={toggleModal}\n          contentType={formContentType}\n          inUpdate={isInUpdate}\n        />\n      </Modal>\n\n      <Headline title=\"All Bookmarks\" subtitle={<Link to=\"/\">Go back</Link>} />\n\n      {isAuthenticated && (\n        <div className={classes.ActionsContainer}>\n          <ActionButton\n            name=\"Add Category\"\n            icon=\"mdiPlusBox\"\n            handler={() => openFormForAdding(ContentType.category)}\n          />\n          <ActionButton\n            name=\"Add Bookmark\"\n            icon=\"mdiPlusBox\"\n            handler={() => openFormForAdding(ContentType.bookmark)}\n          />\n          <ActionButton\n            name=\"Edit Categories\"\n            icon=\"mdiPencil\"\n            handler={() => showTableForEditing(ContentType.category)}\n          />\n          {showTable && tableContentType === ContentType.bookmark && (\n            <ActionButton\n              name=\"Finish Editing\"\n              icon=\"mdiPencil\"\n              handler={finishEditing}\n            />\n          )}\n        </div>\n      )}\n\n      {categories.length && isAuthenticated && !showTable ? (\n        <Message isPrimary={false}>\n          Click on category name to edit its bookmarks\n        </Message>\n      ) : (\n        <></>\n      )}\n\n      {loading ? (\n        <Spinner />\n      ) : !showTable ? (\n        <BookmarkGrid categories={categories} searching={props.searching} />\n      ) : (\n        <Table\n          contentType={tableContentType}\n          openFormForUpdating={openFormForUpdating}\n        />\n      )}\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Skycons } from 'skycons-ts';\nimport { State } from '../../../../store/reducers';\nimport { IconMapping, TimeOfDay } from './IconMapping';\n\ninterface Props {\n  weatherStatusCode: number;\n  isDay: number;\n}\n\nexport const WeatherIcon = (props: Props): JSX.Element => {\n  const { theme } = useSelector((state: State) => state.theme);\n\n  const icon = props.isDay\n    ? new IconMapping().mapIcon(props.weatherStatusCode, TimeOfDay.day)\n    : new IconMapping().mapIcon(props.weatherStatusCode, TimeOfDay.night);\n\n  useEffect(() => {\n    const delay = setTimeout(() => {\n      const skycons = new Skycons({ color: theme.colors.accent });\n      skycons.add(`weather-icon`, icon);\n      skycons.play();\n    }, 1);\n\n    return () => {\n      clearTimeout(delay);\n    };\n  }, [props.weatherStatusCode, icon, theme.colors.accent]);\n\n  return <canvas id={`weather-icon`} width=\"50\" height=\"50\"></canvas>;\n};\n","import { Fragment, ReactNode } from 'react';\nimport classes from './Headline.module.css';\n\ninterface Props {\n  title: string;\n  subtitle?: ReactNode;\n}\n\nexport const Headline = (props: Props): JSX.Element => {\n  return (\n    <Fragment>\n      <h1 className={classes.HeadlineTitle}>{props.title}</h1>\n      {props.subtitle && (\n        <p className={classes.HeadlineSubtitle}>{props.subtitle}</p>\n      )}\n    </Fragment>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport classes from './SectionHeadline.module.css';\n\ninterface Props {\n  title: string;\n  link: string;\n}\n\nexport const SectionHeadline = (props: Props): JSX.Element => {\n  return (\n    <Link to={props.link}>\n      <h2 className={classes.SectionHeadline}>{props.title}</h2>\n    </Link>\n  );\n};\n","const classes = require('./SettingsHeadline.module.css');\n\ninterface Props {\n  text: string;\n}\n\nexport const SettingsHeadline = (props: Props): JSX.Element => {\n  return <h2 className={classes.SettingsHeadline}>{props.text}</h2>;\n};\n","import { ReactNode } from 'react';\nimport classes from './InputGroup.module.css';\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const InputGroup = (props: Props): JSX.Element => {\n  return <div className={classes.InputGroup}>{props.children}</div>;\n};\n","import { ReactNode, SyntheticEvent } from 'react';\n\nimport classes from './ModalForm.module.css';\nimport { Icon } from '../..';\n\ninterface ComponentProps {\n  children: ReactNode;\n  modalHandler?: () => void;\n  formHandler: (e: SyntheticEvent<HTMLFormElement>) => void;\n}\n\nexport const ModalForm = (props: ComponentProps): JSX.Element => {\n  const _modalHandler = (): void => {\n    if (props.modalHandler) {\n      props.modalHandler();\n    }\n  };\n\n  return (\n    <div className={classes.ModalForm}>\n      <div className={classes.ModalFormIcon} onClick={_modalHandler}>\n        <Icon icon=\"mdiClose\" />\n      </div>\n      <form onSubmit={(e) => props.formHandler(e)}>{props.children}</form>\n    </div>\n  );\n};\n","import { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './ActionButton.module.css';\nimport { Icon } from '../..';\n\ninterface Props {\n  name: string;\n  icon: string;\n  link?: string;\n  handler?: () => void;\n}\n\nexport const ActionButton = (props: Props): JSX.Element => {\n  const body = (\n    <Fragment>\n      <div className={classes.ActionButtonIcon}>\n        <Icon icon={props.icon} />\n      </div>\n      <div className={classes.ActionButtonName}>{props.name}</div>\n    </Fragment>\n  );\n\n  if (props.link) {\n    return (\n      <Link to={props.link} tabIndex={0}>\n        {body}\n      </Link>\n    );\n  } else if (props.handler) {\n    return (\n      <div\n        className={classes.ActionButton}\n        onClick={props.handler}\n        onKeyPress={(e) => {\n          if (e.key === 'Enter' && props.handler) props.handler();\n        }}\n        tabIndex={0}\n      >\n        {body}\n      </div>\n    );\n  } else {\n    return <div className={classes.ActionButton}>{body}</div>;\n  }\n};\n","import { ReactNode } from 'react';\nimport classes from './Button.module.css';\n\ninterface Props {\n  children: ReactNode;\n  click?: any;\n}\n\nexport const Button = (props: Props): JSX.Element => {\n  const { children, click } = props;\n\n  return (\n    <button className={classes.Button} onClick={click ? click : () => {}}>\n      {children}\n    </button>\n  );\n};\n","import { ReactNode } from 'react';\n\nimport classes from './Message.module.css';\n\ninterface Props {\n  children: ReactNode;\n  isPrimary?: boolean;\n}\n\nexport const Message = ({ children, isPrimary = true }: Props): JSX.Element => {\n  const style = isPrimary ? classes.message : classes.messageCenter;\n\n  return <p className={style}>{children}</p>;\n};\n","import classes from './AppCard.module.css';\nimport { Icon } from '../../UI';\nimport { iconParser, isImage, isSvg, isUrl, urlParser } from '../../../utility';\n\nimport { App } from '../../../interfaces';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\n\ninterface Props {\n  app: App;\n}\n\nexport const AppCard = ({ app }: Props): JSX.Element => {\n  const { config } = useSelector((state: State) => state.config);\n\n  const [displayUrl, redirectUrl] = urlParser(app.url);\n\n  let iconEl: JSX.Element;\n  const { icon } = app;\n\n  if (isImage(icon)) {\n    const source = isUrl(icon) ? icon : `/uploads/${icon}`;\n\n    iconEl = (\n      <img\n        src={source}\n        alt={`${app.name} icon`}\n        className={classes.CustomIcon}\n      />\n    );\n  } else if (isSvg(icon)) {\n    const source = isUrl(icon) ? icon : `/uploads/${icon}`;\n\n    iconEl = (\n      <div className={classes.CustomIcon}>\n        <svg\n          data-src={source}\n          fill=\"var(--color-primary)\"\n          className={classes.CustomIcon}\n        ></svg>\n      </div>\n    );\n  } else {\n    iconEl = <Icon icon={iconParser(icon)} />;\n  }\n\n  return (\n    <a\n      href={redirectUrl}\n      target={config.appsSameTab ? '' : '_blank'}\n      rel=\"noreferrer\"\n      className={classes.AppCard}\n    >\n      <div className={classes.AppCardIcon}>{iconEl}</div>\n      <div className={classes.AppCardDetails}>\n        <h5>{app.name}</h5>\n        <span>{!app.description.length ? displayUrl : app.description}</span>\n      </div>\n    </a>\n  );\n};\n","import classes from './AppGrid.module.css';\nimport { Link } from 'react-router-dom';\nimport { App } from '../../../interfaces/App';\n\nimport { AppCard } from '../AppCard/AppCard';\nimport { Message } from '../../UI';\n\ninterface Props {\n  apps: App[];\n  totalApps?: number;\n  searching: boolean;\n}\n\nexport const AppGrid = (props: Props): JSX.Element => {\n  let apps: JSX.Element;\n\n  if (props.searching || props.apps.length) {\n    if (!props.apps.length) {\n      apps = <Message>No apps match your search criteria</Message>;\n    } else {\n      apps = (\n        <div className={classes.AppGrid}>\n          {props.apps.map((app: App): JSX.Element => {\n            return <AppCard key={app.id} app={app} />;\n          })}\n        </div>\n      );\n    }\n  } else {\n    if (props.totalApps) {\n      apps = (\n        <Message>\n          There are no pinned applications. You can pin them from the{' '}\n          <Link to=\"/applications\">/applications</Link> menu\n        </Message>\n      );\n    } else {\n      apps = (\n        <Message>\n          You don't have any applications. You can add a new one from{' '}\n          <Link to=\"/applications\">/applications</Link> menu\n        </Message>\n      );\n    }\n  }\n\n  return apps;\n};\n","import { Fragment } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { Bookmark, Category } from '../../../interfaces';\n\n// Other\nimport classes from './BookmarkCard.module.css';\nimport { Icon } from '../../UI';\nimport { iconParser, isImage, isSvg, isUrl, urlParser } from '../../../utility';\n\ninterface Props {\n  category: Category;\n  fromHomepage?: boolean;\n}\n\nexport const BookmarkCard = (props: Props): JSX.Element => {\n  const { category, fromHomepage = false } = props;\n\n  const {\n    config: { config },\n    auth: { isAuthenticated },\n  } = useSelector((state: State) => state);\n\n  const dispatch = useDispatch();\n  const { setEditCategory } = bindActionCreators(actionCreators, dispatch);\n\n  return (\n    <div className={classes.BookmarkCard}>\n      <h3\n        className={\n          fromHomepage || !isAuthenticated ? '' : classes.BookmarkHeader\n        }\n        onClick={() => {\n          if (!fromHomepage && isAuthenticated) {\n            setEditCategory(category);\n          }\n        }}\n      >\n        {category.name}\n      </h3>\n\n      <div className={classes.Bookmarks}>\n        {category.bookmarks.map((bookmark: Bookmark) => {\n          const redirectUrl = urlParser(bookmark.url)[1];\n\n          let iconEl: JSX.Element = <Fragment></Fragment>;\n\n          if (bookmark.icon) {\n            const { icon, name } = bookmark;\n\n            if (isImage(icon)) {\n              const source = isUrl(icon) ? icon : `/uploads/${icon}`;\n\n              iconEl = (\n                <div className={classes.BookmarkIcon}>\n                  <img\n                    src={source}\n                    alt={`${name} icon`}\n                    className={classes.CustomIcon}\n                  />\n                </div>\n              );\n            } else if (isSvg(icon)) {\n              const source = isUrl(icon) ? icon : `/uploads/${icon}`;\n\n              iconEl = (\n                <div className={classes.BookmarkIcon}>\n                  <svg\n                    data-src={source}\n                    fill=\"var(--color-primary)\"\n                    className={classes.BookmarkIconSvg}\n                  ></svg>\n                </div>\n              );\n            } else {\n              iconEl = (\n                <div className={classes.BookmarkIcon}>\n                  <Icon icon={iconParser(icon)} />\n                </div>\n              );\n            }\n          }\n\n          return (\n            <a\n              href={redirectUrl}\n              target={config.bookmarksSameTab ? '' : '_blank'}\n              rel=\"noreferrer\"\n              key={`bookmark-${bookmark.id}`}\n            >\n              {bookmark.icon && iconEl}\n              {bookmark.name}\n            </a>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport classes from './BookmarkGrid.module.css';\n\nimport { Category } from '../../../interfaces';\n\nimport { BookmarkCard } from '../BookmarkCard/BookmarkCard';\nimport { Message } from '../../UI';\n\ninterface Props {\n  categories: Category[];\n  totalCategories?: number;\n  searching: boolean;\n  fromHomepage?: boolean;\n}\n\nexport const BookmarkGrid = (props: Props): JSX.Element => {\n  const {\n    categories,\n    totalCategories,\n    searching,\n    fromHomepage = false,\n  } = props;\n\n  let bookmarks: JSX.Element;\n\n  if (categories.length) {\n    if (searching && !categories[0].bookmarks.length) {\n      bookmarks = <Message>No bookmarks match your search criteria</Message>;\n    } else {\n      bookmarks = (\n        <div className={classes.BookmarkGrid}>\n          {categories.map(\n            (category: Category): JSX.Element => (\n              <BookmarkCard\n                category={category}\n                fromHomepage={fromHomepage}\n                key={category.id}\n              />\n            )\n          )}\n        </div>\n      );\n    }\n  } else {\n    if (totalCategories) {\n      bookmarks = (\n        <Message>\n          There are no pinned categories. You can pin them from the{' '}\n          <Link to=\"/bookmarks\">/bookmarks</Link> menu\n        </Message>\n      );\n    } else {\n      bookmarks = (\n        <Message>\n          You don't have any bookmarks. You can add a new one from{' '}\n          <Link to=\"/bookmarks\">/bookmarks</Link> menu\n        </Message>\n      );\n    }\n  }\n\n  return bookmarks;\n};\n","import { useRef, useEffect, KeyboardEvent } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Typescript\nimport { App, Category } from '../../interfaces';\n\n// CSS\nimport classes from './SearchBar.module.css';\n\n// Utils\nimport { searchParser, urlParser, redirectUrl } from '../../utility';\nimport { State } from '../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../store';\n\ninterface Props {\n  setLocalSearch: (query: string) => void;\n  appSearchResult: App[] | null;\n  bookmarkSearchResult: Category[] | null;\n}\n\nexport const SearchBar = (props: Props): JSX.Element => {\n  const { config, loading } = useSelector((state: State) => state.config);\n\n  const dispatch = useDispatch();\n  const { createNotification } = bindActionCreators(actionCreators, dispatch);\n\n  const { setLocalSearch, appSearchResult, bookmarkSearchResult } = props;\n\n  const inputRef = useRef<HTMLInputElement>(document.createElement('input'));\n\n  // Search bar autofocus\n  useEffect(() => {\n    if (!loading && !config.disableAutofocus) {\n      inputRef.current.focus();\n    }\n  }, [config]);\n\n  // Listen for keyboard events outside of search bar\n  useEffect(() => {\n    const keyOutsideFocus = (e: any) => {\n      const { key } = e as KeyboardEvent;\n\n      if (key === 'Escape') {\n        clearSearch();\n      } else if (document.activeElement !== inputRef.current) {\n        if (key === '`') {\n          inputRef.current.focus();\n          clearSearch();\n        }\n      }\n    };\n\n    window.addEventListener('keyup', keyOutsideFocus);\n\n    return () => window.removeEventListener('keyup', keyOutsideFocus);\n  }, []);\n\n  const clearSearch = () => {\n    inputRef.current.value = '';\n    setLocalSearch('');\n  };\n\n  const searchHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n    const { isLocal, search, query, isURL, sameTab } = searchParser(\n      inputRef.current.value\n    );\n\n    if (isLocal) {\n      setLocalSearch(search);\n    }\n\n    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n      if (!query.prefix) {\n        // Prefix not found -> emit notification\n        createNotification({\n          title: 'Error',\n          message: 'Prefix not found',\n        });\n      } else if (isURL) {\n        // URL or IP passed -> redirect\n        const url = urlParser(inputRef.current.value)[1];\n        redirectUrl(url, sameTab);\n      } else if (isLocal) {\n        // Local query -> redirect if at least 1 result found\n        if (appSearchResult?.length) {\n          redirectUrl(appSearchResult[0].url, sameTab);\n        } else if (bookmarkSearchResult?.[0]?.bookmarks?.length) {\n          redirectUrl(bookmarkSearchResult[0].bookmarks[0].url, sameTab);\n        } else {\n          // no local results -> search the internet with the default search provider\n          let template = query.template;\n\n          if (query.prefix === 'l') {\n            template = 'https://duckduckgo.com/?q=';\n          }\n\n          const url = `${template}${search}`;\n          redirectUrl(url, sameTab);\n        }\n      } else {\n        // Valid query -> redirect to search results\n        const url = `${query.template}${search}`;\n        redirectUrl(url, sameTab);\n      }\n    } else if (e.code === 'Escape') {\n      clearSearch();\n    }\n  };\n\n  return (\n    <div className={classes.SearchContainer}>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        className={classes.SearchBar}\n        onKeyUp={(e) => searchHandler(e)}\n        onDoubleClick={clearSearch}\n      />\n    </div>\n  );\n};\n","import { queries } from './searchQueries.json';\nimport { Query, SearchResult } from '../interfaces';\nimport { store } from '../store/store';\nimport { isUrlOrIp } from '.';\n\nexport const searchParser = (searchQuery: string): SearchResult => {\n  const result: SearchResult = {\n    isLocal: false,\n    isURL: false,\n    sameTab: false,\n    search: '',\n    query: {\n      name: '',\n      prefix: '',\n      template: '',\n    },\n  };\n\n  const { customQueries, config } = store.getState().config;\n\n  // Check if url or ip was passed\n  result.isURL = isUrlOrIp(searchQuery);\n\n  // Match prefix and query\n  const splitQuery = searchQuery.match(/^\\/([a-z]+)[ ](.+)$/i);\n\n  const prefix = splitQuery ? splitQuery[1] : config.defaultSearchProvider;\n\n  const search = splitQuery\n    ? encodeURIComponent(splitQuery[2])\n    : encodeURIComponent(searchQuery);\n\n  const query = [...queries, ...customQueries].find(\n    (q: Query) => q.prefix === prefix\n  );\n\n  // If search provider was found\n  if (query) {\n    result.query = query;\n    result.search = search;\n\n    if (prefix === 'l') {\n      result.isLocal = true;\n    } else {\n      result.sameTab = config.searchSameTab;\n    }\n\n    return result;\n  }\n\n  return result;\n};\n","import { Weather } from '../../interfaces';\n\nexport const weatherTemplate: Weather = {\n  externalLastUpdate: '',\n  tempC: 0,\n  tempF: 0,\n  isDay: 1,\n  cloud: 0,\n  conditionText: '',\n  conditionCode: 1000,\n  id: -1,\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  humidity: 0,\n  windK: 0,\n  windM: 0,\n};\n","import { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\n// Redux\nimport { useSelector } from 'react-redux';\n\n// Typescript\nimport { Weather, ApiResponse } from '../../../interfaces';\n\n// CSS\nimport classes from './WeatherWidget.module.css';\n\n// UI\nimport { WeatherIcon } from '../../UI';\nimport { State } from '../../../store/reducers';\nimport { weatherTemplate } from '../../../utility/templateObjects/weatherTemplate';\n\nexport const WeatherWidget = (): JSX.Element => {\n  const { loading: configLoading, config } = useSelector(\n    (state: State) => state.config\n  );\n\n  const [weather, setWeather] = useState<Weather>(weatherTemplate);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Initial request to get data\n  useEffect(() => {\n    axios\n      .get<ApiResponse<Weather[]>>('/api/weather')\n      .then((data) => {\n        const weatherData = data.data.data[0];\n        if (weatherData) {\n          setWeather(weatherData);\n        }\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // Open socket for data updates\n  useEffect(() => {\n    const socketProtocol =\n      document.location.protocol === 'http:' ? 'ws:' : 'wss:';\n    const socketAddress = `${socketProtocol}//${window.location.host}/socket`;\n    const webSocketClient = new WebSocket(socketAddress);\n\n    webSocketClient.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      setWeather({\n        ...weather,\n        ...data,\n      });\n    };\n\n    return () => webSocketClient.close();\n  }, []);\n\n  return (\n    <div className={classes.WeatherWidget}>\n      {configLoading ||\n        (config.WEATHER_API_KEY && weather.id > 0 && (\n          <Fragment>\n            <div className={classes.WeatherIcon}>\n              <WeatherIcon\n                weatherStatusCode={weather.conditionCode}\n                isDay={weather.isDay}\n              />\n            </div>\n            <div className={classes.WeatherDetails}>\n              {/* TEMPERATURE */}\n              {config.isCelsius ? (\n                <span>{weather.tempC}°C</span>\n              ) : (\n                <span>{Math.round(weather.tempF)}°F</span>\n              )}\n\n              {/* ADDITIONAL DATA */}\n              <span>{weather[config.weatherData]}%</span>\n            </div>\n          </Fragment>\n        ))}\n    </div>\n  );\n};\n","import { parseTime } from '../../../../utility';\n\nexport const getDateTime = (): string => {\n  const days = localStorage.getItem('daySchema')?.split(';') || [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n\n  const months = localStorage.getItem('monthSchema')?.split(';') || [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  const now = new Date();\n\n  const useAmericanDate = localStorage.useAmericanDate === 'true';\n  const showTime = localStorage.showTime === 'true';\n  const hideDate = localStorage.hideDate === 'true';\n\n  // Date\n  let dateEl = '';\n\n  if (!hideDate) {\n    if (!useAmericanDate) {\n      dateEl = `${days[now.getDay()]}, ${now.getDate()} ${\n        months[now.getMonth()]\n      } ${now.getFullYear()}`;\n    } else {\n      dateEl = `${days[now.getDay()]}, ${\n        months[now.getMonth()]\n      } ${now.getDate()} ${now.getFullYear()}`;\n    }\n  }\n\n  // Time\n  const p = parseTime;\n  let timeEl = '';\n\n  if (showTime) {\n    const time = `${p(now.getHours())}:${p(now.getMinutes())}:${p(\n      now.getSeconds()\n    )}`;\n\n    timeEl = time;\n  }\n\n  // Separator\n  let separator = '';\n\n  if (!hideDate && showTime) {\n    separator = ' - ';\n  }\n\n  // Output\n  return `${dateEl}${separator}${timeEl}`;\n};\n","export const greeter = (): string => {\n  const now = new Date().getHours();\n  let msg: string;\n\n  const greetingsSchemaRaw =\n    localStorage.getItem('greetingsSchema') ||\n    'Good evening!;Good afternoon!;Good morning!;Good night!';\n  const greetingsSchema = greetingsSchemaRaw.split(';');\n\n  if (now >= 18) msg = greetingsSchema[0];\n  else if (now >= 12) msg = greetingsSchema[1];\n  else if (now >= 6) msg = greetingsSchema[2];\n  else if (now >= 0) msg = greetingsSchema[3];\n  else msg = 'Hello!';\n\n  return msg;\n};\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\n\n// CSS\nimport classes from './Header.module.css';\n\n// Components\nimport { WeatherWidget } from '../../Widgets/WeatherWidget/WeatherWidget';\n\n// Utils\nimport { getDateTime } from './functions/getDateTime';\nimport { greeter } from './functions/greeter';\n\nexport const Header = (): JSX.Element => {\n  const { hideHeader, hideDate, showTime } = useSelector(\n    (state: State) => state.config.config\n  );\n\n  const [dateTime, setDateTime] = useState<string>(getDateTime());\n  const [greeting, setGreeting] = useState<string>(greeter());\n\n  useEffect(() => {\n    let dateTimeInterval: NodeJS.Timeout;\n\n    dateTimeInterval = setInterval(() => {\n      setDateTime(getDateTime());\n      setGreeting(greeter());\n    }, 1000);\n\n    return () => window.clearInterval(dateTimeInterval);\n  }, []);\n\n  return (\n    <header className={classes.Header}>\n      {(!hideDate || showTime) && <p>{dateTime}</p>}\n\n      <Link to=\"/settings\" className={classes.SettingsLink}>\n        Go to Settings\n      </Link>\n\n      {!hideHeader && (\n        <span className={classes.HeaderMain}>\n          <h1>{greeting}</h1>\n          <WeatherWidget />\n        </span>\n      )}\n    </header>\n  );\n};\n","import { useState, useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../store';\n\n// Typescript\nimport { App, Category } from '../../interfaces';\n\n// UI\nimport { Icon, Container, SectionHeadline, Spinner, Message } from '../UI';\n\n// CSS\nimport classes from './Home.module.css';\n\n// Components\nimport { AppGrid } from '../Apps/AppGrid/AppGrid';\nimport { BookmarkGrid } from '../Bookmarks/BookmarkGrid/BookmarkGrid';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { Header } from './Header/Header';\n\n// Utils\nimport { escapeRegex } from '../../utility';\n\nexport const Home = (): JSX.Element => {\n  const {\n    apps: { apps, loading: appsLoading },\n    bookmarks: { categories, loading: bookmarksLoading },\n    config: { config },\n    auth: { isAuthenticated },\n  } = useSelector((state: State) => state);\n\n  const dispatch = useDispatch();\n  const { getApps, getCategories } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  // Local search query\n  const [localSearch, setLocalSearch] = useState<null | string>(null);\n  const [appSearchResult, setAppSearchResult] = useState<null | App[]>(null);\n  const [bookmarkSearchResult, setBookmarkSearchResult] = useState<\n    null | Category[]\n  >(null);\n\n  // Load applications\n  useEffect(() => {\n    if (!apps.length) {\n      getApps();\n    }\n  }, []);\n\n  // Load bookmark categories\n  useEffect(() => {\n    if (!categories.length) {\n      getCategories();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (localSearch) {\n      // Search through apps\n      setAppSearchResult([\n        ...apps.filter(({ name, description }) =>\n          new RegExp(escapeRegex(localSearch), 'i').test(\n            `${name} ${description}`\n          )\n        ),\n      ]);\n\n      // Search through bookmarks\n      const category = { ...categories[0] };\n\n      category.name = 'Search Results';\n      category.bookmarks = categories\n        .map(({ bookmarks }) => bookmarks)\n        .flat()\n        .filter(({ name }) =>\n          new RegExp(escapeRegex(localSearch), 'i').test(name)\n        );\n\n      setBookmarkSearchResult([category]);\n    } else {\n      setAppSearchResult(null);\n      setBookmarkSearchResult(null);\n    }\n  }, [localSearch]);\n\n  return (\n    <Container>\n      {!config.hideSearch ? (\n        <SearchBar\n          setLocalSearch={setLocalSearch}\n          appSearchResult={appSearchResult}\n          bookmarkSearchResult={bookmarkSearchResult}\n        />\n      ) : (\n        <div></div>\n      )}\n\n      <Header />\n\n      {!isAuthenticated &&\n      !apps.some((a) => a.isPinned) &&\n      !categories.some((c) => c.isPinned) ? (\n        <Message>\n          Welcome to Flame! Go to <Link to=\"/settings/app\">/settings</Link>,\n          login and start customizing your new homepage\n        </Message>\n      ) : (\n        <></>\n      )}\n\n      {!config.hideApps && (isAuthenticated || apps.some((a) => a.isPinned)) ? (\n        <Fragment>\n          <SectionHeadline title=\"Applications\" link=\"/applications\" />\n          {appsLoading ? (\n            <Spinner />\n          ) : (\n            <AppGrid\n              apps={\n                !appSearchResult\n                  ? apps.filter(({ isPinned }) => isPinned)\n                  : appSearchResult\n              }\n              totalApps={apps.length}\n              searching={!!localSearch}\n            />\n          )}\n          <div className={classes.HomeSpace}></div>\n        </Fragment>\n      ) : (\n        <></>\n      )}\n\n      {!config.hideCategories &&\n      (isAuthenticated || categories.some((c) => c.isPinned)) ? (\n        <Fragment>\n          <SectionHeadline title=\"Bookmarks\" link=\"/bookmarks\" />\n          {bookmarksLoading ? (\n            <Spinner />\n          ) : (\n            <BookmarkGrid\n              categories={\n                !bookmarkSearchResult\n                  ? categories.filter(\n                      ({ isPinned, bookmarks }) => isPinned && bookmarks.length\n                    )\n                  : bookmarkSearchResult\n              }\n              totalCategories={categories.length}\n              searching={!!localSearch}\n              fromHomepage={true}\n            />\n          )}\n        </Fragment>\n      ) : (\n        <></>\n      )}\n\n      <Link to=\"/settings\" className={classes.SettingsButton}>\n        <Icon icon=\"mdiCog\" color=\"var(--color-background)\" />\n      </Link>\n    </Container>\n  );\n};\n","import { useState, useEffect, ChangeEvent, SyntheticEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NewApp } from '../../../interfaces';\n\nimport classes from './AppForm.module.css';\n\nimport { ModalForm, InputGroup, Button } from '../../UI';\nimport { inputHandler, newAppTemplate } from '../../../utility';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\nimport { State } from '../../../store/reducers';\n\ninterface Props {\n  modalHandler: () => void;\n}\n\nexport const AppForm = ({ modalHandler }: Props): JSX.Element => {\n  const { appInUpdate } = useSelector((state: State) => state.apps);\n\n  const dispatch = useDispatch();\n  const { addApp, updateApp, setEditApp } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  const [useCustomIcon, toggleUseCustomIcon] = useState<boolean>(false);\n  const [customIcon, setCustomIcon] = useState<File | null>(null);\n  const [formData, setFormData] = useState<NewApp>(newAppTemplate);\n\n  useEffect(() => {\n    if (appInUpdate) {\n      setFormData({\n        ...appInUpdate,\n      });\n    } else {\n      setFormData(newAppTemplate);\n    }\n  }, [appInUpdate]);\n\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<NewApp>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  const fileChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    if (e.target.files) {\n      setCustomIcon(e.target.files[0]);\n    }\n  };\n\n  const formSubmitHandler = (e: SyntheticEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n\n    const createFormData = (): FormData => {\n      const data = new FormData();\n\n      if (customIcon) {\n        data.append('icon', customIcon);\n      }\n\n      data.append('name', formData.name);\n      data.append('description', formData.description);\n      data.append('url', formData.url);\n      data.append('isPublic', `${formData.isPublic ? 1 : 0}`);\n\n      return data;\n    };\n\n    if (!appInUpdate) {\n      if (customIcon) {\n        const data = createFormData();\n        addApp(data);\n      } else {\n        addApp(formData);\n      }\n    } else {\n      if (customIcon) {\n        const data = createFormData();\n        updateApp(appInUpdate.id, data);\n      } else {\n        updateApp(appInUpdate.id, formData);\n        modalHandler();\n      }\n    }\n\n    setFormData(newAppTemplate);\n    setEditApp(null);\n  };\n\n  return (\n    <ModalForm modalHandler={modalHandler} formHandler={formSubmitHandler}>\n      {/* NAME */}\n      <InputGroup>\n        <label htmlFor=\"name\">App name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Bookstack\"\n          required\n          value={formData.name}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      {/* URL */}\n      <InputGroup>\n        <label htmlFor=\"url\">App URL</label>\n        <input\n          type=\"text\"\n          name=\"url\"\n          id=\"url\"\n          placeholder=\"bookstack.example.com\"\n          required\n          value={formData.url}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      {/* DESCRIPTION */}\n      <InputGroup>\n        <label htmlFor=\"description\">App description</label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          id=\"description\"\n          placeholder=\"My self-hosted app\"\n          value={formData.description}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n        <span>\n          Optional - If description is not set, app URL will be displayed\n        </span>\n      </InputGroup>\n\n      {/* ICON */}\n      {!useCustomIcon ? (\n        // use mdi icon\n        <InputGroup>\n          <label htmlFor=\"icon\">App icon</label>\n          <input\n            type=\"text\"\n            name=\"icon\"\n            id=\"icon\"\n            placeholder=\"book-open-outline\"\n            required\n            value={formData.icon}\n            onChange={(e) => inputChangeHandler(e)}\n          />\n          <span>\n            Use icon name from MDI or pass a valid URL.\n            <a href=\"https://materialdesignicons.com/\" target=\"blank\">\n              {' '}\n              Click here for reference\n            </a>\n          </span>\n          <span\n            onClick={() => toggleUseCustomIcon(!useCustomIcon)}\n            className={classes.Switch}\n          >\n            Switch to custom icon upload\n          </span>\n        </InputGroup>\n      ) : (\n        // upload custom icon\n        <InputGroup>\n          <label htmlFor=\"icon\">App Icon</label>\n          <input\n            type=\"file\"\n            name=\"icon\"\n            id=\"icon\"\n            required\n            onChange={(e) => fileChangeHandler(e)}\n            accept=\".jpg,.jpeg,.png,.svg,.ico\"\n          />\n          <span\n            onClick={() => {\n              setCustomIcon(null);\n              toggleUseCustomIcon(!useCustomIcon);\n            }}\n            className={classes.Switch}\n          >\n            Switch to MDI\n          </span>\n        </InputGroup>\n      )}\n\n      {/* VISIBILITY */}\n      <InputGroup>\n        <label htmlFor=\"isPublic\">App visibility</label>\n        <select\n          id=\"isPublic\"\n          name=\"isPublic\"\n          value={formData.isPublic ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>Visible (anyone can access it)</option>\n          <option value={0}>Hidden (authentication required)</option>\n        </select>\n      </InputGroup>\n\n      {!appInUpdate ? (\n        <Button>Add new application</Button>\n      ) : (\n        <Button>Update application</Button>\n      )}\n    </ModalForm>\n  );\n};\n","import { Icon } from '../UI';\nimport classes from './TableActions.module.css';\n\ninterface Entity {\n  id: number;\n  name: string;\n  isPinned?: boolean;\n  isPublic: boolean;\n}\n\ninterface Props {\n  entity: Entity;\n  deleteHandler: (id: number, name: string) => void;\n  updateHandler: (id: number) => void;\n  pinHanlder?: (id: number) => void;\n  changeVisibilty: (id: number) => void;\n  showPin?: boolean;\n}\n\nexport const TableActions = (props: Props): JSX.Element => {\n  const {\n    entity,\n    deleteHandler,\n    updateHandler,\n    pinHanlder,\n    changeVisibilty,\n    showPin = true,\n  } = props;\n\n  const _pinHandler = pinHanlder || function () {};\n\n  return (\n    <td className={classes.TableActions}>\n      {/* DELETE */}\n      <div\n        className={classes.TableAction}\n        onClick={() => deleteHandler(entity.id, entity.name)}\n        tabIndex={0}\n      >\n        <Icon icon=\"mdiDelete\" />\n      </div>\n\n      {/* UPDATE */}\n      <div\n        className={classes.TableAction}\n        onClick={() => updateHandler(entity.id)}\n        tabIndex={0}\n      >\n        <Icon icon=\"mdiPencil\" />\n      </div>\n\n      {/* PIN */}\n      {showPin && (\n        <div\n          className={classes.TableAction}\n          onClick={() => _pinHandler(entity.id)}\n          tabIndex={0}\n        >\n          {entity.isPinned ? (\n            <Icon icon=\"mdiPinOff\" color=\"var(--color-accent)\" />\n          ) : (\n            <Icon icon=\"mdiPin\" />\n          )}\n        </div>\n      )}\n\n      {/* VISIBILITY */}\n      <div\n        className={classes.TableAction}\n        onClick={() => changeVisibilty(entity.id)}\n        tabIndex={0}\n      >\n        {entity.isPublic ? (\n          <Icon icon=\"mdiEyeOff\" color=\"var(--color-accent)\" />\n        ) : (\n          <Icon icon=\"mdiEye\" />\n        )}\n      </div>\n    </td>\n  );\n};\n","import { Fragment, useState, useEffect } from 'react';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { App } from '../../../interfaces';\n\n// Other\nimport { Message, Table } from '../../UI';\nimport { TableActions } from '../../Actions/TableActions';\n\ninterface Props {\n  openFormForUpdating: (app: App) => void;\n}\n\nexport const AppTable = (props: Props): JSX.Element => {\n  const {\n    apps: { apps },\n    config: { config },\n  } = useSelector((state: State) => state);\n\n  const dispatch = useDispatch();\n  const { pinApp, deleteApp, reorderApps, createNotification, updateApp } =\n    bindActionCreators(actionCreators, dispatch);\n\n  const [localApps, setLocalApps] = useState<App[]>([]);\n\n  // Copy apps array\n  useEffect(() => {\n    setLocalApps([...apps]);\n  }, [apps]);\n\n  const dragEndHanlder = (result: DropResult): void => {\n    if (config.useOrdering !== 'orderId') {\n      createNotification({\n        title: 'Error',\n        message: 'Custom order is disabled',\n      });\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const tmpApps = [...localApps];\n    const [movedApp] = tmpApps.splice(result.source.index, 1);\n    tmpApps.splice(result.destination.index, 0, movedApp);\n\n    setLocalApps(tmpApps);\n    reorderApps(tmpApps);\n  };\n\n  // Action handlers\n  const deleteAppHandler = (id: number, name: string) => {\n    const proceed = window.confirm(`Are you sure you want to delete ${name}?`);\n\n    if (proceed) {\n      deleteApp(id);\n    }\n  };\n\n  const updateAppHandler = (id: number) => {\n    const app = apps.find((a) => a.id === id) as App;\n    props.openFormForUpdating(app);\n  };\n\n  const pinAppHandler = (id: number) => {\n    const app = apps.find((a) => a.id === id) as App;\n    pinApp(app);\n  };\n\n  const changeAppVisibiltyHandler = (id: number) => {\n    const app = apps.find((a) => a.id === id) as App;\n    updateApp(id, { ...app, isPublic: !app.isPublic });\n  };\n\n  return (\n    <Fragment>\n      <Message isPrimary={false}>\n        {config.useOrdering === 'orderId' ? (\n          <p>You can drag and drop single rows to reorder application</p>\n        ) : (\n          <p>\n            Custom order is disabled. You can change it in the{' '}\n            <Link to=\"/settings/general\">settings</Link>\n          </p>\n        )}\n      </Message>\n\n      <DragDropContext onDragEnd={dragEndHanlder}>\n        <Droppable droppableId=\"apps\">\n          {(provided) => (\n            <Table\n              headers={['Name', 'URL', 'Icon', 'Visibility', 'Actions']}\n              innerRef={provided.innerRef}\n            >\n              {localApps.map((app: App, index): JSX.Element => {\n                return (\n                  <Draggable\n                    key={app.id}\n                    draggableId={app.id.toString()}\n                    index={index}\n                  >\n                    {(provided, snapshot) => {\n                      const style = {\n                        border: snapshot.isDragging\n                          ? '1px solid var(--color-accent)'\n                          : 'none',\n                        borderRadius: '4px',\n                        ...provided.draggableProps.style,\n                      };\n\n                      return (\n                        <tr\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          ref={provided.innerRef}\n                          style={style}\n                        >\n                          <td style={{ width: '200px' }}>{app.name}</td>\n                          <td style={{ width: '200px' }}>{app.url}</td>\n                          <td style={{ width: '200px' }}>{app.icon}</td>\n                          <td style={{ width: '200px' }}>\n                            {app.isPublic ? 'Visible' : 'Hidden'}\n                          </td>\n\n                          {!snapshot.isDragging && (\n                            <TableActions\n                              entity={app}\n                              deleteHandler={deleteAppHandler}\n                              updateHandler={updateAppHandler}\n                              pinHanlder={pinAppHandler}\n                              changeVisibilty={changeAppVisibiltyHandler}\n                            />\n                          )}\n                        </tr>\n                      );\n                    }}\n                  </Draggable>\n                );\n              })}\n            </Table>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </Fragment>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Typescript\nimport { App } from '../../interfaces';\n\n// CSS\nimport classes from './Apps.module.css';\n\n// UI\nimport { Headline, Spinner, ActionButton, Modal, Container } from '../UI';\n\n// Subcomponents\nimport { AppGrid } from './AppGrid/AppGrid';\nimport { AppForm } from './AppForm/AppForm';\nimport { AppTable } from './AppTable/AppTable';\n\n// Utils\nimport { State } from '../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../store';\n\ninterface Props {\n  searching: boolean;\n}\n\nexport const Apps = (props: Props): JSX.Element => {\n  // Get Redux state\n  const {\n    apps: { apps, loading },\n    auth: { isAuthenticated },\n  } = useSelector((state: State) => state);\n\n  // Get Redux action creators\n  const dispatch = useDispatch();\n  const { getApps, setEditApp } = bindActionCreators(actionCreators, dispatch);\n\n  // Load apps if array is empty\n  useEffect(() => {\n    if (!apps.length) {\n      getApps();\n    }\n  }, []);\n\n  // Form\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n\n  // Observe if user is authenticated -> set default view if not\n  useEffect(() => {\n    if (!isAuthenticated) {\n      setShowTable(false);\n      setModalIsOpen(false);\n    }\n  }, [isAuthenticated]);\n\n  // Form actions\n  const toggleModal = (): void => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  const toggleEdit = (): void => {\n    setShowTable(!showTable);\n  };\n\n  const openFormForUpdating = (app: App): void => {\n    setEditApp(app);\n    setModalIsOpen(true);\n  };\n\n  return (\n    <Container>\n      <Modal isOpen={modalIsOpen} setIsOpen={setModalIsOpen}>\n        <AppForm modalHandler={toggleModal} />\n      </Modal>\n\n      <Headline\n        title=\"All Applications\"\n        subtitle={<Link to=\"/\">Go back</Link>}\n      />\n\n      {isAuthenticated && (\n        <div className={classes.ActionsContainer}>\n          <ActionButton\n            name=\"Add\"\n            icon=\"mdiPlusBox\"\n            handler={() => {\n              setEditApp(null);\n              toggleModal();\n            }}\n          />\n          <ActionButton name=\"Edit\" icon=\"mdiPencil\" handler={toggleEdit} />\n        </div>\n      )}\n\n      <div className={classes.Apps}>\n        {loading ? (\n          <Spinner />\n        ) : !showTable ? (\n          <AppGrid apps={apps} searching={props.searching} />\n        ) : (\n          <AppTable openFormForUpdating={openFormForUpdating} />\n        )}\n      </div>\n    </Container>\n  );\n};\n","import { Theme } from '../../../interfaces/Theme';\nimport classes from './ThemePreview.module.css';\n\ninterface Props {\n  theme: Theme;\n  applyTheme: Function;\n}\n\nexport const ThemePreview = (props: Props): JSX.Element => {\n  return (\n    <div\n      className={classes.ThemePreview}\n      onClick={() => props.applyTheme(props.theme.name)}\n    >\n      <div className={classes.ColorsPreview}>\n        <div\n          className={classes.ColorPreview}\n          style={{ backgroundColor: props.theme.colors.background }}\n        ></div>\n        <div\n          className={classes.ColorPreview}\n          style={{ backgroundColor: props.theme.colors.primary }}\n        ></div>\n        <div\n          className={classes.ColorPreview}\n          style={{ backgroundColor: props.theme.colors.accent }}\n        ></div>\n      </div>\n      <p>{props.theme.name}</p>\n    </div>\n  );\n};\n","import { ChangeEvent, FormEvent, Fragment, useEffect, useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { Theme, ThemeSettingsForm } from '../../../interfaces';\n\n// Components\nimport { ThemePreview } from './ThemePreview';\nimport { Button, InputGroup, SettingsHeadline } from '../../UI';\n\n// Other\nimport classes from './Themer.module.css';\nimport { themes } from './themes.json';\nimport { State } from '../../../store/reducers';\nimport { inputHandler, themeSettingsTemplate } from '../../../utility';\n\nexport const Themer = (): JSX.Element => {\n  const {\n    auth: { isAuthenticated },\n    config: { loading, config },\n  } = useSelector((state: State) => state);\n\n  const dispatch = useDispatch();\n  const { setTheme, updateConfig } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  // Initial state\n  const [formData, setFormData] = useState<ThemeSettingsForm>(\n    themeSettingsTemplate\n  );\n\n  // Get config\n  useEffect(() => {\n    setFormData({\n      ...config,\n    });\n  }, [loading]);\n\n  // Form handler\n  const formSubmitHandler = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // Save settings\n    await updateConfig(formData);\n  };\n\n  // Input handler\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<ThemeSettingsForm>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  return (\n    <Fragment>\n      <SettingsHeadline text=\"Set theme\" />\n      <div className={classes.ThemerGrid}>\n        {themes.map(\n          (theme: Theme, idx: number): JSX.Element => (\n            <ThemePreview key={idx} theme={theme} applyTheme={setTheme} />\n          )\n        )}\n      </div>\n\n      {isAuthenticated && (\n        <form onSubmit={formSubmitHandler}>\n          <SettingsHeadline text=\"Other settings\" />\n          <InputGroup>\n            <label htmlFor=\"defaultTheme\">Default theme (for new users)</label>\n            <select\n              id=\"defaultTheme\"\n              name=\"defaultTheme\"\n              value={formData.defaultTheme}\n              onChange={(e) => inputChangeHandler(e)}\n            >\n              {themes.map((theme: Theme, idx) => (\n                <option key={idx} value={theme.name}>\n                  {theme.name}\n                </option>\n              ))}\n            </select>\n          </InputGroup>\n\n          <Button>Save changes</Button>\n        </form>\n      )}\n    </Fragment>\n  );\n};\n","import { useState, ChangeEvent, useEffect, FormEvent } from 'react';\nimport axios from 'axios';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\nimport { State } from '../../../store/reducers';\n\n// Typescript\nimport { ApiResponse, Weather, WeatherForm } from '../../../interfaces';\n\n// UI\nimport { InputGroup, Button, SettingsHeadline } from '../../UI';\n\n// Utils\nimport { inputHandler, weatherSettingsTemplate } from '../../../utility';\n\nexport const WeatherSettings = (): JSX.Element => {\n  const { loading, config } = useSelector((state: State) => state.config);\n\n  const dispatch = useDispatch();\n  const { createNotification, updateConfig } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  // Initial state\n  const [formData, setFormData] = useState<WeatherForm>(\n    weatherSettingsTemplate\n  );\n\n  // Get config\n  useEffect(() => {\n    setFormData({\n      ...config,\n    });\n  }, [loading]);\n\n  // Form handler\n  const formSubmitHandler = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // Check for api key input\n    if ((formData.lat || formData.long) && !formData.WEATHER_API_KEY) {\n      createNotification({\n        title: 'Warning',\n        message: 'API key is missing. Weather Module will NOT work',\n      });\n    }\n\n    // Save settings\n    await updateConfig(formData);\n\n    // Update weather\n    axios\n      .get<ApiResponse<Weather>>('/api/weather/update')\n      .then(() => {\n        createNotification({\n          title: 'Success',\n          message: 'Weather updated',\n        });\n      })\n      .catch((err) => {\n        createNotification({\n          title: 'Error',\n          message: err.response.data.error,\n        });\n      });\n  };\n\n  // Input handler\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<WeatherForm>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  // Get user location\n  const getLocation = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => {\n        setFormData({\n          ...formData,\n          lat: latitude,\n          long: longitude,\n        });\n      }\n    );\n  };\n\n  return (\n    <form onSubmit={(e) => formSubmitHandler(e)}>\n      <SettingsHeadline text=\"API\" />\n      {/* API KEY */}\n      <InputGroup>\n        <label htmlFor=\"WEATHER_API_KEY\">API key</label>\n        <input\n          type=\"text\"\n          id=\"WEATHER_API_KEY\"\n          name=\"WEATHER_API_KEY\"\n          placeholder=\"secret\"\n          value={formData.WEATHER_API_KEY}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n        <span>\n          Using\n          <a href=\"https://www.weatherapi.com/pricing.aspx\" target=\"blank\">\n            {' '}\n            Weather API\n          </a>\n          . Key is required for weather module to work.\n        </span>\n      </InputGroup>\n\n      <SettingsHeadline text=\"Location\" />\n      {/* LAT */}\n      <InputGroup>\n        <label htmlFor=\"lat\">Latitude</label>\n        <input\n          type=\"number\"\n          id=\"lat\"\n          name=\"lat\"\n          placeholder=\"52.22\"\n          value={formData.lat}\n          onChange={(e) => inputChangeHandler(e, { isNumber: true })}\n          step=\"any\"\n          lang=\"en-150\"\n        />\n        <span onClick={getLocation}>\n          <a href=\"#\">Click to get current location</a>\n        </span>\n      </InputGroup>\n\n      {/* LONG */}\n      <InputGroup>\n        <label htmlFor=\"long\">Longitude</label>\n        <input\n          type=\"number\"\n          id=\"long\"\n          name=\"long\"\n          placeholder=\"21.01\"\n          value={formData.long}\n          onChange={(e) => inputChangeHandler(e, { isNumber: true })}\n          step=\"any\"\n          lang=\"en-150\"\n        />\n      </InputGroup>\n\n      <SettingsHeadline text=\"Other\" />\n      {/* TEMPERATURE */}\n      <InputGroup>\n        <label htmlFor=\"isCelsius\">Temperature unit</label>\n        <select\n          id=\"isCelsius\"\n          name=\"isCelsius\"\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n          value={formData.isCelsius ? 1 : 0}\n        >\n          <option value={1}>Celsius</option>\n          <option value={0}>Fahrenheit</option>\n        </select>\n      </InputGroup>\n\n      {/* WEATHER DATA */}\n      <InputGroup>\n        <label htmlFor=\"weatherData\">Additional weather data</label>\n        <select\n          id=\"weatherData\"\n          name=\"weatherData\"\n          value={formData.weatherData}\n          onChange={(e) => inputChangeHandler(e)}\n        >\n          <option value=\"cloud\">Cloud coverage</option>\n          <option value=\"humidity\">Humidity</option>\n        </select>\n      </InputGroup>\n\n      <Button>Save changes</Button>\n    </form>\n  );\n};\n","import { useState, useEffect, ChangeEvent, FormEvent } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { UISettingsForm } from '../../../interfaces';\n\n// UI\nimport { InputGroup, Button, SettingsHeadline } from '../../UI';\n\n// Utils\nimport { uiSettingsTemplate, inputHandler } from '../../../utility';\n\nexport const UISettings = (): JSX.Element => {\n  const { loading, config } = useSelector((state: State) => state.config);\n\n  const dispatch = useDispatch();\n  const { updateConfig } = bindActionCreators(actionCreators, dispatch);\n\n  // Initial state\n  const [formData, setFormData] = useState<UISettingsForm>(uiSettingsTemplate);\n\n  // Get config\n  useEffect(() => {\n    setFormData({\n      ...config,\n    });\n  }, [loading]);\n\n  // Form handler\n  const formSubmitHandler = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // Save settings\n    await updateConfig(formData);\n\n    // Update local page title\n    document.title = formData.customTitle;\n  };\n\n  // Input handler\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<UISettingsForm>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  return (\n    <form onSubmit={(e) => formSubmitHandler(e)}>\n      {/* === OTHER OPTIONS === */}\n      <SettingsHeadline text=\"Miscellaneous\" />\n      {/* PAGE TITLE */}\n      <InputGroup>\n        <label htmlFor=\"customTitle\">Custom page title</label>\n        <input\n          type=\"text\"\n          id=\"customTitle\"\n          name=\"customTitle\"\n          placeholder=\"Flame\"\n          value={formData.customTitle}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      {/* === SEARCH OPTIONS === */}\n      <SettingsHeadline text=\"Search\" />\n      {/* HIDE SEARCHBAR */}\n      <InputGroup>\n        <label htmlFor=\"hideSearch\">Hide search bar</label>\n        <select\n          id=\"hideSearch\"\n          name=\"hideSearch\"\n          value={formData.hideSearch ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* AUTOFOCUS SEARCHBAR */}\n      <InputGroup>\n        <label htmlFor=\"disableAutofocus\">Disable search bar autofocus</label>\n        <select\n          id=\"disableAutofocus\"\n          name=\"disableAutofocus\"\n          value={formData.disableAutofocus ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* === HEADER OPTIONS === */}\n      <SettingsHeadline text=\"Header\" />\n      {/* HIDE HEADER */}\n      <InputGroup>\n        <label htmlFor=\"hideHeader\">\n          Hide headline (greetings and weather)\n        </label>\n        <select\n          id=\"hideHeader\"\n          name=\"hideHeader\"\n          value={formData.hideHeader ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* HIDE DATE */}\n      <InputGroup>\n        <label htmlFor=\"hideDate\">Hide date</label>\n        <select\n          id=\"hideDate\"\n          name=\"hideDate\"\n          value={formData.hideDate ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* HIDE TIME */}\n      <InputGroup>\n        <label htmlFor=\"showTime\">Hide time</label>\n        <select\n          id=\"showTime\"\n          name=\"showTime\"\n          value={formData.showTime ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={0}>True</option>\n          <option value={1}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* DATE FORMAT */}\n      <InputGroup>\n        <label htmlFor=\"useAmericanDate\">Date formatting</label>\n        <select\n          id=\"useAmericanDate\"\n          name=\"useAmericanDate\"\n          value={formData.useAmericanDate ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>Friday, October 22 2021</option>\n          <option value={0}>Friday, 22 October 2021</option>\n        </select>\n      </InputGroup>\n\n      {/* CUSTOM GREETINGS */}\n      <InputGroup>\n        <label htmlFor=\"greetingsSchema\">Custom greetings</label>\n        <input\n          type=\"text\"\n          id=\"greetingsSchema\"\n          name=\"greetingsSchema\"\n          placeholder=\"Good day;Hi;Bye!\"\n          value={formData.greetingsSchema}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n        <span>\n          Greetings must be separated with semicolon. All 4 messages must be\n          filled, even if they are the same\n        </span>\n      </InputGroup>\n\n      {/* CUSTOM DAYS */}\n      <InputGroup>\n        <label htmlFor=\"daySchema\">Custom weekday names</label>\n        <input\n          type=\"text\"\n          id=\"daySchema\"\n          name=\"daySchema\"\n          placeholder=\"Sunday;Monday;Tuesday\"\n          value={formData.daySchema}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n        <span>Names must be separated with semicolon</span>\n      </InputGroup>\n\n      {/* CUSTOM MONTHS */}\n      <InputGroup>\n        <label htmlFor=\"monthSchema\">Custom month names</label>\n        <input\n          type=\"text\"\n          id=\"monthSchema\"\n          name=\"monthSchema\"\n          placeholder=\"January;February;March\"\n          value={formData.monthSchema}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n        <span>Names must be separated with semicolon</span>\n      </InputGroup>\n\n      {/* === SECTIONS OPTIONS === */}\n      <SettingsHeadline text=\"Sections\" />\n      {/* HIDE APPS */}\n      <InputGroup>\n        <label htmlFor=\"hideApps\">Hide applications</label>\n        <select\n          id=\"hideApps\"\n          name=\"hideApps\"\n          value={formData.hideApps ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* HIDE CATEGORIES */}\n      <InputGroup>\n        <label htmlFor=\"hideCategories\">Hide categories</label>\n        <select\n          id=\"hideCategories\"\n          name=\"hideCategories\"\n          value={formData.hideCategories ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      <Button>Save changes</Button>\n    </form>\n  );\n};\n","import { FormEvent, Fragment, useEffect, useState, useRef } from 'react';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../../store';\nimport { State } from '../../../../store/reducers';\nimport { decodeToken, parseTokenExpire } from '../../../../utility';\n\n// Other\nimport { InputGroup, Button } from '../../../UI';\nimport classes from '../AppDetails.module.css';\n\nexport const AuthForm = (): JSX.Element => {\n  const { isAuthenticated, token } = useSelector((state: State) => state.auth);\n\n  const dispatch = useDispatch();\n  const { login, logout } = bindActionCreators(actionCreators, dispatch);\n\n  const [tokenExpires, setTokenExpires] = useState('');\n  const [formData, setFormData] = useState({\n    password: '',\n    duration: '14d',\n  });\n\n  const passwordInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    passwordInputRef.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      const decoded = decodeToken(token);\n      const expiresIn = parseTokenExpire(decoded.exp);\n      setTokenExpires(expiresIn);\n    }\n  }, [token]);\n\n  const formHandler = (e: FormEvent) => {\n    e.preventDefault();\n    login(formData);\n    setFormData({\n      password: '',\n      duration: '14d',\n    });\n  };\n\n  return (\n    <Fragment>\n      {!isAuthenticated ? (\n        <form onSubmit={formHandler}>\n          <InputGroup>\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"••••••\"\n              autoComplete=\"current-password\"\n              ref={passwordInputRef}\n              value={formData.password}\n              onChange={(e) =>\n                setFormData({ ...formData, password: e.target.value })\n              }\n            />\n            <span>\n              See\n              <a\n                href=\"https://github.com/pawelmalak/flame/wiki/Authentication\"\n                target=\"blank\"\n              >\n                {` project wiki `}\n              </a>\n              to read more about authentication\n            </span>\n          </InputGroup>\n\n          <InputGroup>\n            <label htmlFor=\"duration\">Session duration</label>\n            <select\n              id=\"duration\"\n              name=\"duration\"\n              value={formData.duration}\n              onChange={(e) =>\n                setFormData({ ...formData, duration: e.target.value })\n              }\n            >\n              <option value=\"1h\">1 hour</option>\n              <option value=\"1d\">1 day</option>\n              <option value=\"14d\">2 weeks</option>\n              <option value=\"30d\">1 month</option>\n              <option value=\"1y\">1 year</option>\n            </select>\n          </InputGroup>\n\n          <Button>Login</Button>\n        </form>\n      ) : (\n        <div>\n          <p className={classes.text}>\n            You are logged in. Your session will expire{' '}\n            <span>{tokenExpires}</span>\n          </p>\n          <Button click={logout}>Logout</Button>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n","import { Fragment } from 'react';\n\n// UI\nimport { Button, SettingsHeadline } from '../../UI';\nimport { AuthForm } from './AuthForm/AuthForm';\nimport classes from './AppDetails.module.css';\n\n// Store\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\n\n// Other\nimport { checkVersion } from '../../../utility';\n\nexport const AppDetails = (): JSX.Element => {\n  const { isAuthenticated } = useSelector((state: State) => state.auth);\n\n  return (\n    <Fragment>\n      <SettingsHeadline text=\"Authentication\" />\n      <AuthForm />\n\n      {isAuthenticated && (\n        <Fragment>\n          <hr className={classes.separator} />\n\n          <div>\n            <SettingsHeadline text=\"App version\" />\n            <p className={classes.text}>\n              <a\n                href=\"https://github.com/pawelmalak/flame\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Flame\n              </a>{' '}\n              version {process.env.REACT_APP_VERSION}\n            </p>\n\n            <p className={classes.text}>\n              See changelog{' '}\n              <a\n                href=\"https://github.com/pawelmalak/flame/blob/master/CHANGELOG.md\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                here\n              </a>\n            </p>\n\n            <Button click={() => checkVersion(true)}>Check for updates</Button>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n","import { useState, useEffect, ChangeEvent, FormEvent } from 'react';\nimport axios from 'axios';\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { ApiResponse } from '../../../interfaces';\n\n// Other\nimport { InputGroup, Button } from '../../UI';\nimport { applyAuth } from '../../../utility';\n\nexport const StyleSettings = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { createNotification } = bindActionCreators(actionCreators, dispatch);\n\n  const [customStyles, setCustomStyles] = useState<string>('');\n\n  useEffect(() => {\n    axios\n      .get<ApiResponse<string>>('/api/config/0/css')\n      .then((data) => setCustomStyles(data.data.data))\n      .catch((err) => console.log(err.response));\n  }, []);\n\n  const inputChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    e.preventDefault();\n    setCustomStyles(e.target.value);\n  };\n\n  const formSubmitHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    axios\n      .put<ApiResponse<{}>>(\n        '/api/config/0/css',\n        { styles: customStyles },\n        { headers: applyAuth() }\n      )\n      .then(() => {\n        createNotification({\n          title: 'Success',\n          message: 'CSS saved. Reload page to see changes',\n        });\n      })\n      .catch((err) => console.log(err.response));\n  };\n\n  return (\n    <form onSubmit={(e) => formSubmitHandler(e)}>\n      <InputGroup>\n        <label htmlFor=\"customStyles\">Custom CSS</label>\n        <textarea\n          id=\"customStyles\"\n          name=\"customStyles\"\n          value={customStyles}\n          onChange={(e) => inputChangeHandler(e)}\n          spellCheck={false}\n        ></textarea>\n      </InputGroup>\n      <Button>Save CSS</Button>\n    </form>\n  );\n};\n","import { ChangeEvent, FormEvent, useState, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../../store';\n\nimport { Query } from '../../../../interfaces';\n\nimport { Button, InputGroup, ModalForm } from '../../../UI';\n\ninterface Props {\n  modalHandler: () => void;\n  query?: Query;\n}\n\nexport const QueriesForm = (props: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const { addQuery, updateQuery } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  const { modalHandler, query } = props;\n\n  const [formData, setFormData] = useState<Query>({\n    name: '',\n    prefix: '',\n    template: '',\n  });\n\n  const inputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const formHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (query) {\n      updateQuery(formData, query.prefix);\n    } else {\n      addQuery(formData);\n    }\n\n    // close modal\n    modalHandler();\n\n    // clear form\n    setFormData({\n      name: '',\n      prefix: '',\n      template: '',\n    });\n  };\n\n  useEffect(() => {\n    if (query) {\n      setFormData(query);\n    } else {\n      setFormData({\n        name: '',\n        prefix: '',\n        template: '',\n      });\n    }\n  }, [query]);\n\n  return (\n    <ModalForm modalHandler={modalHandler} formHandler={formHandler}>\n      <InputGroup>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Google\"\n          required\n          value={formData.name}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      <InputGroup>\n        <label htmlFor=\"name\">Prefix</label>\n        <input\n          type=\"text\"\n          name=\"prefix\"\n          id=\"prefix\"\n          placeholder=\"g\"\n          required\n          value={formData.prefix}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      <InputGroup>\n        <label htmlFor=\"name\">Query Template</label>\n        <input\n          type=\"text\"\n          name=\"template\"\n          id=\"template\"\n          placeholder=\"https://www.google.com/search?q=\"\n          required\n          value={formData.template}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      {query ? <Button>Update provider</Button> : <Button>Add provider</Button>}\n    </ModalForm>\n  );\n};\n","import { Fragment, useState } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../../store';\n\n// Typescript\nimport { Query } from '../../../../interfaces';\n\n// CSS\nimport classes from './CustomQueries.module.css';\n\n// UI\nimport { Modal, Icon, Button } from '../../../UI';\n\n// Components\nimport { QueriesForm } from './QueriesForm';\n\nexport const CustomQueries = (): JSX.Element => {\n  const { customQueries, config } = useSelector((state: State) => state.config);\n\n  const dispatch = useDispatch();\n  const { deleteQuery, createNotification } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editableQuery, setEditableQuery] = useState<Query | null>(null);\n\n  const updateHandler = (query: Query) => {\n    setEditableQuery(query);\n    setModalIsOpen(true);\n  };\n\n  const deleteHandler = (query: Query) => {\n    const currentProvider = config.defaultSearchProvider;\n    const isCurrent = currentProvider === query.prefix;\n\n    if (isCurrent) {\n      createNotification({\n        title: 'Error',\n        message: 'Cannot delete active provider',\n      });\n    } else if (\n      window.confirm(`Are you sure you want to delete this provider?`)\n    ) {\n      deleteQuery(query.prefix);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        isOpen={modalIsOpen}\n        setIsOpen={() => setModalIsOpen(!modalIsOpen)}\n      >\n        {editableQuery ? (\n          <QueriesForm\n            modalHandler={() => setModalIsOpen(!modalIsOpen)}\n            query={editableQuery}\n          />\n        ) : (\n          <QueriesForm modalHandler={() => setModalIsOpen(!modalIsOpen)} />\n        )}\n      </Modal>\n\n      <div>\n        <div className={classes.QueriesGrid}>\n          {customQueries.length > 0 && (\n            <Fragment>\n              <span>Name</span>\n              <span>Prefix</span>\n              <span>Actions</span>\n\n              <div className={classes.Separator}></div>\n            </Fragment>\n          )}\n\n          {customQueries.map((q: Query, idx) => (\n            <Fragment key={idx}>\n              <span>{q.name}</span>\n              <span>{q.prefix}</span>\n              <span className={classes.ActionIcons}>\n                <span onClick={() => updateHandler(q)}>\n                  <Icon icon=\"mdiPencil\" />\n                </span>\n                <span onClick={() => deleteHandler(q)}>\n                  <Icon icon=\"mdiDelete\" />\n                </span>\n              </span>\n            </Fragment>\n          ))}\n        </div>\n\n        <Button\n          click={() => {\n            setEditableQuery(null);\n            setModalIsOpen(true);\n          }}\n        >\n          Add new search provider\n        </Button>\n      </div>\n    </Fragment>\n  );\n};\n","// React\nimport { useState, useEffect, FormEvent, ChangeEvent, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Typescript\nimport { Query, GeneralForm } from '../../../interfaces';\n\n// Components\nimport { CustomQueries } from './CustomQueries/CustomQueries';\n\n// UI\nimport { Button, SettingsHeadline, InputGroup } from '../../UI';\n\n// Utils\nimport { inputHandler, generalSettingsTemplate } from '../../../utility';\n\n// Data\nimport { queries } from '../../../utility/searchQueries.json';\n\n// Redux\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\nexport const GeneralSettings = (): JSX.Element => {\n  const {\n    config: { loading, customQueries, config },\n    bookmarks: { categories },\n  } = useSelector((state: State) => state);\n\n  const dispatch = useDispatch();\n  const { updateConfig, sortApps, sortCategories, sortBookmarks } =\n    bindActionCreators(actionCreators, dispatch);\n\n  // Initial state\n  const [formData, setFormData] = useState<GeneralForm>(\n    generalSettingsTemplate\n  );\n\n  // Get config\n  useEffect(() => {\n    setFormData({\n      ...config,\n    });\n  }, [loading]);\n\n  // Form handler\n  const formSubmitHandler = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // Save settings\n    await updateConfig(formData);\n\n    // Sort entities with new settings\n    if (formData.useOrdering !== config.useOrdering) {\n      sortApps();\n      sortCategories();\n\n      for (let { id } of categories) {\n        sortBookmarks(id);\n      }\n    }\n  };\n\n  // Input handler\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<GeneralForm>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  return (\n    <Fragment>\n      <form\n        onSubmit={(e) => formSubmitHandler(e)}\n        style={{ marginBottom: '30px' }}\n      >\n        {/* === GENERAL OPTIONS === */}\n        <SettingsHeadline text=\"General\" />\n        {/* SORT TYPE */}\n        <InputGroup>\n          <label htmlFor=\"useOrdering\">Sorting type</label>\n          <select\n            id=\"useOrdering\"\n            name=\"useOrdering\"\n            value={formData.useOrdering}\n            onChange={(e) => inputChangeHandler(e)}\n          >\n            <option value=\"createdAt\">By creation date</option>\n            <option value=\"name\">Alphabetical order</option>\n            <option value=\"orderId\">Custom order</option>\n          </select>\n        </InputGroup>\n\n        {/* === APPS OPTIONS === */}\n        <SettingsHeadline text=\"Apps\" />\n        {/* PIN APPS */}\n        <InputGroup>\n          <label htmlFor=\"pinAppsByDefault\">\n            Pin new applications by default\n          </label>\n          <select\n            id=\"pinAppsByDefault\"\n            name=\"pinAppsByDefault\"\n            value={formData.pinAppsByDefault ? 1 : 0}\n            onChange={(e) => inputChangeHandler(e, { isBool: true })}\n          >\n            <option value={1}>True</option>\n            <option value={0}>False</option>\n          </select>\n        </InputGroup>\n\n        {/* APPS OPPENING */}\n        <InputGroup>\n          <label htmlFor=\"appsSameTab\">Open applications in the same tab</label>\n          <select\n            id=\"appsSameTab\"\n            name=\"appsSameTab\"\n            value={formData.appsSameTab ? 1 : 0}\n            onChange={(e) => inputChangeHandler(e, { isBool: true })}\n          >\n            <option value={1}>True</option>\n            <option value={0}>False</option>\n          </select>\n        </InputGroup>\n\n        {/* === BOOKMARKS OPTIONS === */}\n        <SettingsHeadline text=\"Bookmarks\" />\n        {/* PIN CATEGORIES */}\n        <InputGroup>\n          <label htmlFor=\"pinCategoriesByDefault\">\n            Pin new categories by default\n          </label>\n          <select\n            id=\"pinCategoriesByDefault\"\n            name=\"pinCategoriesByDefault\"\n            value={formData.pinCategoriesByDefault ? 1 : 0}\n            onChange={(e) => inputChangeHandler(e, { isBool: true })}\n          >\n            <option value={1}>True</option>\n            <option value={0}>False</option>\n          </select>\n        </InputGroup>\n\n        {/* BOOKMARKS OPPENING */}\n        <InputGroup>\n          <label htmlFor=\"bookmarksSameTab\">\n            Open bookmarks in the same tab\n          </label>\n          <select\n            id=\"bookmarksSameTab\"\n            name=\"bookmarksSameTab\"\n            value={formData.bookmarksSameTab ? 1 : 0}\n            onChange={(e) => inputChangeHandler(e, { isBool: true })}\n          >\n            <option value={1}>True</option>\n            <option value={0}>False</option>\n          </select>\n        </InputGroup>\n\n        {/* SEARCH SETTINGS */}\n        <SettingsHeadline text=\"Search\" />\n        <InputGroup>\n          <label htmlFor=\"defaultSearchProvider\">Default search provider</label>\n          <select\n            id=\"defaultSearchProvider\"\n            name=\"defaultSearchProvider\"\n            value={formData.defaultSearchProvider}\n            onChange={(e) => inputChangeHandler(e)}\n          >\n            {[...queries, ...customQueries].map((query: Query, idx) => {\n              const isCustom = idx >= queries.length;\n\n              return (\n                <option key={idx} value={query.prefix}>\n                  {isCustom && '+'} {query.name}\n                </option>\n              );\n            })}\n          </select>\n        </InputGroup>\n\n        <InputGroup>\n          <label htmlFor=\"searchSameTab\">\n            Open search results in the same tab\n          </label>\n          <select\n            id=\"searchSameTab\"\n            name=\"searchSameTab\"\n            value={formData.searchSameTab ? 1 : 0}\n            onChange={(e) => inputChangeHandler(e, { isBool: true })}\n          >\n            <option value={1}>True</option>\n            <option value={0}>False</option>\n          </select>\n        </InputGroup>\n\n        <Button>Save changes</Button>\n      </form>\n\n      {/* CUSTOM QUERIES */}\n      <SettingsHeadline text=\"Custom search providers\" />\n      <CustomQueries />\n    </Fragment>\n  );\n};\n","import { useState, useEffect, ChangeEvent, FormEvent } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { DockerSettingsForm } from '../../../interfaces';\n\n// UI\nimport { InputGroup, Button, SettingsHeadline } from '../../UI';\n\n// Utils\nimport { inputHandler, dockerSettingsTemplate } from '../../../utility';\n\nexport const DockerSettings = (): JSX.Element => {\n  const { loading, config } = useSelector((state: State) => state.config);\n\n  const dispatch = useDispatch();\n  const { updateConfig } = bindActionCreators(actionCreators, dispatch);\n\n  // Initial state\n  const [formData, setFormData] = useState<DockerSettingsForm>(\n    dockerSettingsTemplate\n  );\n\n  // Get config\n  useEffect(() => {\n    setFormData({\n      ...config,\n    });\n  }, [loading]);\n\n  // Form handler\n  const formSubmitHandler = async (e: FormEvent) => {\n    e.preventDefault();\n\n    // Save settings\n    await updateConfig(formData);\n  };\n\n  // Input handler\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<DockerSettingsForm>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  return (\n    <form onSubmit={(e) => formSubmitHandler(e)}>\n      <SettingsHeadline text=\"Docker\" />\n      {/* CUSTOM DOCKER SOCKET HOST */}\n      <InputGroup>\n        <label htmlFor=\"dockerHost\">Docker host</label>\n        <input\n          type=\"text\"\n          id=\"dockerHost\"\n          name=\"dockerHost\"\n          placeholder=\"dockerHost:port\"\n          value={formData.dockerHost}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      {/* USE DOCKER API */}\n      <InputGroup>\n        <label htmlFor=\"dockerApps\">Use Docker API</label>\n        <select\n          id=\"dockerApps\"\n          name=\"dockerApps\"\n          value={formData.dockerApps ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* UNPIN DOCKER APPS */}\n      <InputGroup>\n        <label htmlFor=\"unpinStoppedApps\">\n          Unpin stopped containers / other apps\n        </label>\n        <select\n          id=\"unpinStoppedApps\"\n          name=\"unpinStoppedApps\"\n          value={formData.unpinStoppedApps ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      {/* KUBERNETES SETTINGS */}\n      <SettingsHeadline text=\"Kubernetes\" />\n      {/* USE KUBERNETES */}\n      <InputGroup>\n        <label htmlFor=\"kubernetesApps\">Use Kubernetes Ingress API</label>\n        <select\n          id=\"kubernetesApps\"\n          name=\"kubernetesApps\"\n          value={formData.kubernetesApps ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>True</option>\n          <option value={0}>False</option>\n        </select>\n      </InputGroup>\n\n      <Button>Save changes</Button>\n    </form>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { State } from '../../store/reducers';\n\nexport const ProtectedRoute = ({ ...rest }: RouteProps) => {\n  const { isAuthenticated } = useSelector((state: State) => state.auth);\n\n  if (isAuthenticated) {\n    return <Route {...rest} />;\n  } else {\n    return <Redirect to=\"/settings/app\" />;\n  }\n};\n","import { NavLink, Link, Switch, Route } from 'react-router-dom';\n\n// Redux\nimport { useSelector } from 'react-redux';\nimport { State } from '../../store/reducers';\n\n// Typescript\nimport { Route as SettingsRoute } from '../../interfaces';\n\n// CSS\nimport classes from './Settings.module.css';\n\n// Components\nimport { Themer } from './Themer/Themer';\nimport { WeatherSettings } from './WeatherSettings/WeatherSettings';\nimport { UISettings } from './UISettings/UISettings';\nimport { AppDetails } from './AppDetails/AppDetails';\nimport { StyleSettings } from './StyleSettings/StyleSettings';\nimport { GeneralSettings } from './GeneralSettings/GeneralSettings';\nimport { DockerSettings } from './DockerSettings/DockerSettings';\nimport { ProtectedRoute } from '../Routing/ProtectedRoute';\n\n// UI\nimport { Container, Headline } from '../UI';\n\n// Data\nimport { routes } from './settings.json';\n\nexport const Settings = (): JSX.Element => {\n  const { isAuthenticated } = useSelector((state: State) => state.auth);\n\n  const tabs = isAuthenticated ? routes : routes.filter((r) => !r.authRequired);\n\n  return (\n    <Container>\n      <Headline title=\"Settings\" subtitle={<Link to=\"/\">Go back</Link>} />\n      <div className={classes.Settings}>\n        {/* NAVIGATION MENU */}\n        <nav className={classes.SettingsNav}>\n          {tabs.map(({ name, dest }: SettingsRoute, idx) => (\n            <NavLink\n              className={classes.SettingsNavLink}\n              activeClassName={classes.SettingsNavLinkActive}\n              exact\n              to={dest}\n              key={idx}\n            >\n              {name}\n            </NavLink>\n          ))}\n        </nav>\n\n        {/* ROUTES */}\n        <section className={classes.SettingsContent}>\n          <Switch>\n            <Route exact path=\"/settings\" component={Themer} />\n            <ProtectedRoute\n              path=\"/settings/weather\"\n              component={WeatherSettings}\n            />\n            <ProtectedRoute\n              path=\"/settings/general\"\n              component={GeneralSettings}\n            />\n            <ProtectedRoute path=\"/settings/interface\" component={UISettings} />\n            <ProtectedRoute\n              path=\"/settings/docker\"\n              component={DockerSettings}\n            />\n            <ProtectedRoute path=\"/settings/css\" component={StyleSettings} />\n            <Route path=\"/settings/app\" component={AppDetails} />\n          </Switch>\n        </section>\n      </div>\n    </Container>\n  );\n};\n","import { ChangeEvent, FormEvent, useEffect, useState } from 'react';\n\n// Redux\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { Category, NewCategory } from '../../../interfaces';\n\n// UI\nimport { ModalForm, InputGroup, Button } from '../../UI';\n\n// Utils\nimport { inputHandler, newCategoryTemplate } from '../../../utility';\n\ninterface Props {\n  modalHandler: () => void;\n  category?: Category;\n}\n\nexport const CategoryForm = ({\n  category,\n  modalHandler,\n}: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const { addCategory, updateCategory } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  const [formData, setFormData] = useState<NewCategory>(newCategoryTemplate);\n\n  // Load category data if provided for editing\n  useEffect(() => {\n    if (category) {\n      setFormData({ ...category });\n    } else {\n      setFormData(newCategoryTemplate);\n    }\n  }, [category]);\n\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<NewCategory>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  // Category form handler\n  const formSubmitHandler = (e: FormEvent): void => {\n    e.preventDefault();\n\n    if (!category) {\n      addCategory(formData);\n    } else {\n      updateCategory(category.id, formData);\n      modalHandler();\n    }\n\n    setFormData(newCategoryTemplate);\n  };\n\n  return (\n    <ModalForm modalHandler={modalHandler} formHandler={formSubmitHandler}>\n      <InputGroup>\n        <label htmlFor=\"name\">Category Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Social Media\"\n          required\n          value={formData.name}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      <InputGroup>\n        <label htmlFor=\"isPublic\">Category visibility</label>\n        <select\n          id=\"isPublic\"\n          name=\"isPublic\"\n          value={formData.isPublic ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>Visible (anyone can access it)</option>\n          <option value={0}>Hidden (authentication required)</option>\n        </select>\n      </InputGroup>\n\n      <Button>{category ? 'Update category' : 'Add new category'}</Button>\n    </ModalForm>\n  );\n};\n","import { useState, ChangeEvent, useEffect, FormEvent } from 'react';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { Bookmark, Category, NewBookmark } from '../../../interfaces';\n\n// UI\nimport { ModalForm, InputGroup, Button } from '../../UI';\n\n// CSS\nimport classes from './Form.module.css';\n\n// Utils\nimport { inputHandler, newBookmarkTemplate } from '../../../utility';\n\ninterface Props {\n  modalHandler: () => void;\n  bookmark?: Bookmark;\n}\n\nexport const BookmarksForm = ({\n  bookmark,\n  modalHandler,\n}: Props): JSX.Element => {\n  const { categories } = useSelector((state: State) => state.bookmarks);\n\n  const dispatch = useDispatch();\n  const { addBookmark, updateBookmark, createNotification } =\n    bindActionCreators(actionCreators, dispatch);\n\n  const [useCustomIcon, toggleUseCustomIcon] = useState<boolean>(false);\n  const [customIcon, setCustomIcon] = useState<File | null>(null);\n\n  const [formData, setFormData] = useState<NewBookmark>(newBookmarkTemplate);\n\n  // Load bookmark data if provided for editing\n  useEffect(() => {\n    if (bookmark) {\n      setFormData({ ...bookmark });\n    } else {\n      setFormData(newBookmarkTemplate);\n    }\n  }, [bookmark]);\n\n  const inputChangeHandler = (\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    options?: { isNumber?: boolean; isBool?: boolean }\n  ) => {\n    inputHandler<NewBookmark>({\n      e,\n      options,\n      setStateHandler: setFormData,\n      state: formData,\n    });\n  };\n\n  const fileChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    if (e.target.files) {\n      setCustomIcon(e.target.files[0]);\n    }\n  };\n\n  // Bookmarks form handler\n  const formSubmitHandler = (e: FormEvent): void => {\n    e.preventDefault();\n\n    const createFormData = (): FormData => {\n      const data = new FormData();\n      if (customIcon) {\n        data.append('icon', customIcon);\n      }\n      data.append('name', formData.name);\n      data.append('url', formData.url);\n      data.append('categoryId', `${formData.categoryId}`);\n      data.append('isPublic', `${formData.isPublic ? 1 : 0}`);\n\n      return data;\n    };\n\n    const checkCategory = (): boolean => {\n      if (formData.categoryId < 0) {\n        createNotification({\n          title: 'Error',\n          message: 'Please select category',\n        });\n\n        return false;\n      }\n\n      return true;\n    };\n\n    if (!bookmark) {\n      // add new bookmark\n      if (!checkCategory()) return;\n\n      if (formData.categoryId < 0) {\n        createNotification({\n          title: 'Error',\n          message: 'Please select category',\n        });\n        return;\n      }\n\n      if (customIcon) {\n        const data = createFormData();\n        addBookmark(data);\n      } else {\n        addBookmark(formData);\n      }\n\n      setFormData({\n        ...newBookmarkTemplate,\n        categoryId: formData.categoryId,\n        isPublic: formData.isPublic,\n      });\n    } else {\n      // update\n      if (!checkCategory()) return;\n\n      if (customIcon) {\n        const data = createFormData();\n        updateBookmark(bookmark.id, data, {\n          prev: bookmark.categoryId,\n          curr: formData.categoryId,\n        });\n      } else {\n        updateBookmark(bookmark.id, formData, {\n          prev: bookmark.categoryId,\n          curr: formData.categoryId,\n        });\n      }\n\n      modalHandler();\n    }\n\n    setFormData({ ...newBookmarkTemplate, categoryId: formData.categoryId });\n    setCustomIcon(null);\n  };\n\n  return (\n    <ModalForm modalHandler={modalHandler} formHandler={formSubmitHandler}>\n      {/* NAME */}\n      <InputGroup>\n        <label htmlFor=\"name\">Bookmark Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Reddit\"\n          required\n          value={formData.name}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      {/* URL */}\n      <InputGroup>\n        <label htmlFor=\"url\">Bookmark URL</label>\n        <input\n          type=\"text\"\n          name=\"url\"\n          id=\"url\"\n          placeholder=\"reddit.com\"\n          required\n          value={formData.url}\n          onChange={(e) => inputChangeHandler(e)}\n        />\n      </InputGroup>\n\n      {/* CATEGORY */}\n      <InputGroup>\n        <label htmlFor=\"categoryId\">Bookmark Category</label>\n        <select\n          name=\"categoryId\"\n          id=\"categoryId\"\n          required\n          onChange={(e) => inputChangeHandler(e, { isNumber: true })}\n          value={formData.categoryId}\n        >\n          <option value={-1}>Select category</option>\n          {categories.map((category: Category): JSX.Element => {\n            return (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            );\n          })}\n        </select>\n      </InputGroup>\n\n      {/* ICON */}\n      {!useCustomIcon ? (\n        // mdi\n        <InputGroup>\n          <label htmlFor=\"icon\">Bookmark Icon (optional)</label>\n          <input\n            type=\"text\"\n            name=\"icon\"\n            id=\"icon\"\n            placeholder=\"book-open-outline\"\n            value={formData.icon}\n            onChange={(e) => inputChangeHandler(e)}\n          />\n          <span>\n            Use icon name from MDI or pass a valid URL.\n            <a href=\"https://materialdesignicons.com/\" target=\"blank\">\n              {' '}\n              Click here for reference\n            </a>\n          </span>\n          <span\n            onClick={() => toggleUseCustomIcon(!useCustomIcon)}\n            className={classes.Switch}\n          >\n            Switch to custom icon upload\n          </span>\n        </InputGroup>\n      ) : (\n        // custom\n        <InputGroup>\n          <label htmlFor=\"icon\">Bookmark Icon (optional)</label>\n          <input\n            type=\"file\"\n            name=\"icon\"\n            id=\"icon\"\n            onChange={(e) => fileChangeHandler(e)}\n            accept=\".jpg,.jpeg,.png,.svg,.ico\"\n          />\n          <span\n            onClick={() => {\n              setCustomIcon(null);\n              toggleUseCustomIcon(!useCustomIcon);\n            }}\n            className={classes.Switch}\n          >\n            Switch to MDI\n          </span>\n        </InputGroup>\n      )}\n\n      {/* VISIBILTY */}\n      <InputGroup>\n        <label htmlFor=\"isPublic\">Bookmark visibility</label>\n        <select\n          id=\"isPublic\"\n          name=\"isPublic\"\n          value={formData.isPublic ? 1 : 0}\n          onChange={(e) => inputChangeHandler(e, { isBool: true })}\n        >\n          <option value={1}>Visible (anyone can access it)</option>\n          <option value={0}>Hidden (authentication required)</option>\n        </select>\n      </InputGroup>\n\n      <Button>{bookmark ? 'Update bookmark' : 'Add new bookmark'}</Button>\n    </ModalForm>\n  );\n};\n","// Typescript\nimport { ContentType } from '../Bookmarks';\n\n// Utils\nimport { CategoryForm } from './CategoryForm';\nimport { BookmarksForm } from './BookmarksForm';\nimport { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bookmarkTemplate, categoryTemplate } from '../../../utility';\n\ninterface Props {\n  modalHandler: () => void;\n  contentType: ContentType;\n  inUpdate?: boolean;\n}\n\nexport const Form = (props: Props): JSX.Element => {\n  const { categoryInEdit, bookmarkInEdit } = useSelector(\n    (state: State) => state.bookmarks\n  );\n\n  const { modalHandler, contentType, inUpdate } = props;\n\n  return (\n    <Fragment>\n      {!inUpdate ? (\n        // form: add new\n        <Fragment>\n          {contentType === ContentType.category ? (\n            <CategoryForm modalHandler={modalHandler} />\n          ) : (\n            <BookmarksForm modalHandler={modalHandler} />\n          )}\n        </Fragment>\n      ) : (\n        // form: update\n        <Fragment>\n          {contentType === ContentType.category ? (\n            <CategoryForm\n              modalHandler={modalHandler}\n              category={categoryInEdit || categoryTemplate}\n            />\n          ) : (\n            <BookmarksForm\n              modalHandler={modalHandler}\n              bookmark={bookmarkInEdit || bookmarkTemplate}\n            />\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n","import { useState, useEffect, Fragment } from 'react';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from 'react-beautiful-dnd';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { Bookmark, Category } from '../../../interfaces';\n\n// UI\nimport { Message, Table } from '../../UI';\nimport { TableActions } from '../../Actions/TableActions';\nimport { bookmarkTemplate } from '../../../utility';\n\ninterface Props {\n  openFormForUpdating: (data: Category | Bookmark) => void;\n}\n\nexport const BookmarksTable = ({ openFormForUpdating }: Props): JSX.Element => {\n  const {\n    bookmarks: { categoryInEdit },\n    config: { config },\n  } = useSelector((state: State) => state);\n\n  const dispatch = useDispatch();\n  const {\n    deleteBookmark,\n    updateBookmark,\n    createNotification,\n    reorderBookmarks,\n  } = bindActionCreators(actionCreators, dispatch);\n\n  const [localBookmarks, setLocalBookmarks] = useState<Bookmark[]>([]);\n\n  // Copy bookmarks array\n  useEffect(() => {\n    if (categoryInEdit) {\n      setLocalBookmarks([...categoryInEdit.bookmarks]);\n    }\n  }, [categoryInEdit]);\n\n  // Drag and drop handler\n  const dragEndHanlder = (result: DropResult): void => {\n    if (config.useOrdering !== 'orderId') {\n      createNotification({\n        title: 'Error',\n        message: 'Custom order is disabled',\n      });\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const tmpBookmarks = [...localBookmarks];\n    const [movedBookmark] = tmpBookmarks.splice(result.source.index, 1);\n    tmpBookmarks.splice(result.destination.index, 0, movedBookmark);\n\n    setLocalBookmarks(tmpBookmarks);\n\n    const categoryId = categoryInEdit?.id || -1;\n    reorderBookmarks(tmpBookmarks, categoryId);\n  };\n\n  // Action hanlders\n  const deleteBookmarkHandler = (id: number, name: string) => {\n    const categoryId = categoryInEdit?.id || -1;\n\n    const proceed = window.confirm(`Are you sure you want to delete ${name}?`);\n    if (proceed) {\n      deleteBookmark(id, categoryId);\n    }\n  };\n\n  const updateBookmarkHandler = (id: number) => {\n    const bookmark =\n      categoryInEdit?.bookmarks.find((b) => b.id === id) || bookmarkTemplate;\n\n    openFormForUpdating(bookmark);\n  };\n\n  const changeBookmarkVisibiltyHandler = (id: number) => {\n    const bookmark =\n      categoryInEdit?.bookmarks.find((b) => b.id === id) || bookmarkTemplate;\n\n    const categoryId = categoryInEdit?.id || -1;\n    const [prev, curr] = [categoryId, categoryId];\n\n    updateBookmark(\n      id,\n      { ...bookmark, isPublic: !bookmark.isPublic },\n      { prev, curr }\n    );\n  };\n\n  return (\n    <Fragment>\n      {!categoryInEdit ? (\n        <Message isPrimary={false}>\n          Switch to grid view and click on the name of category you want to edit\n        </Message>\n      ) : (\n        <Message isPrimary={false}>\n          Editing bookmarks from&nbsp;<span>{categoryInEdit.name}</span>\n          &nbsp;category\n        </Message>\n      )}\n\n      {categoryInEdit && (\n        <DragDropContext onDragEnd={dragEndHanlder}>\n          <Droppable droppableId=\"bookmarks\">\n            {(provided) => (\n              <Table\n                headers={[\n                  'Name',\n                  'URL',\n                  'Icon',\n                  'Visibility',\n                  'Category',\n                  'Actions',\n                ]}\n                innerRef={provided.innerRef}\n              >\n                {localBookmarks.map((bookmark, index): JSX.Element => {\n                  return (\n                    <Draggable\n                      key={bookmark.id}\n                      draggableId={bookmark.id.toString()}\n                      index={index}\n                    >\n                      {(provided, snapshot) => {\n                        const style = {\n                          border: snapshot.isDragging\n                            ? '1px solid var(--color-accent)'\n                            : 'none',\n                          borderRadius: '4px',\n                          ...provided.draggableProps.style,\n                        };\n\n                        return (\n                          <tr\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                            style={style}\n                          >\n                            <td style={{ width: '200px' }}>{bookmark.name}</td>\n                            <td style={{ width: '200px' }}>{bookmark.url}</td>\n                            <td style={{ width: '200px' }}>{bookmark.icon}</td>\n                            <td style={{ width: '200px' }}>\n                              {bookmark.isPublic ? 'Visible' : 'Hidden'}\n                            </td>\n                            <td style={{ width: '200px' }}>\n                              {categoryInEdit.name}\n                            </td>\n\n                            {!snapshot.isDragging && (\n                              <TableActions\n                                entity={bookmark}\n                                deleteHandler={deleteBookmarkHandler}\n                                updateHandler={updateBookmarkHandler}\n                                changeVisibilty={changeBookmarkVisibiltyHandler}\n                                showPin={false}\n                              />\n                            )}\n                          </tr>\n                        );\n                      }}\n                    </Draggable>\n                  );\n                })}\n              </Table>\n            )}\n          </Droppable>\n        </DragDropContext>\n      )}\n    </Fragment>\n  );\n};\n","import { useState, useEffect, Fragment } from 'react';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../store/reducers';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../../../store';\n\n// Typescript\nimport { Bookmark, Category } from '../../../interfaces';\n\n// UI\nimport { Message, Table } from '../../UI';\nimport { TableActions } from '../../Actions/TableActions';\n\ninterface Props {\n  openFormForUpdating: (data: Category | Bookmark) => void;\n}\n\nexport const CategoryTable = ({ openFormForUpdating }: Props): JSX.Element => {\n  const {\n    config: { config },\n    bookmarks: { categories },\n  } = useSelector((state: State) => state);\n\n  const dispatch = useDispatch();\n  const {\n    pinCategory,\n    deleteCategory,\n    createNotification,\n    reorderCategories,\n    updateCategory,\n  } = bindActionCreators(actionCreators, dispatch);\n\n  const [localCategories, setLocalCategories] = useState<Category[]>([]);\n\n  // Copy categories array\n  useEffect(() => {\n    setLocalCategories([...categories]);\n  }, [categories]);\n\n  // Drag and drop handler\n  const dragEndHanlder = (result: DropResult): void => {\n    if (config.useOrdering !== 'orderId') {\n      createNotification({\n        title: 'Error',\n        message: 'Custom order is disabled',\n      });\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const tmpCategories = [...localCategories];\n    const [movedCategory] = tmpCategories.splice(result.source.index, 1);\n    tmpCategories.splice(result.destination.index, 0, movedCategory);\n\n    setLocalCategories(tmpCategories);\n    reorderCategories(tmpCategories);\n  };\n\n  // Action handlers\n  const deleteCategoryHandler = (id: number, name: string) => {\n    const proceed = window.confirm(\n      `Are you sure you want to delete ${name}? It will delete ALL assigned bookmarks`\n    );\n\n    if (proceed) {\n      deleteCategory(id);\n    }\n  };\n\n  const updateCategoryHandler = (id: number) => {\n    const category = categories.find((c) => c.id === id) as Category;\n    openFormForUpdating(category);\n  };\n\n  const pinCategoryHandler = (id: number) => {\n    const category = categories.find((c) => c.id === id) as Category;\n    pinCategory(category);\n  };\n\n  const changeCategoryVisibiltyHandler = (id: number) => {\n    const category = categories.find((c) => c.id === id) as Category;\n    updateCategory(id, { ...category, isPublic: !category.isPublic });\n  };\n\n  return (\n    <Fragment>\n      <Message isPrimary={false}>\n        {config.useOrdering === 'orderId' ? (\n          <p>You can drag and drop single rows to reorder categories</p>\n        ) : (\n          <p>\n            Custom order is disabled. You can change it in the{' '}\n            <Link to=\"/settings/general\">settings</Link>\n          </p>\n        )}\n      </Message>\n\n      <DragDropContext onDragEnd={dragEndHanlder}>\n        <Droppable droppableId=\"categories\">\n          {(provided) => (\n            <Table\n              headers={['Name', 'Visibility', 'Actions']}\n              innerRef={provided.innerRef}\n            >\n              {localCategories.map((category, index): JSX.Element => {\n                return (\n                  <Draggable\n                    key={category.id}\n                    draggableId={category.id.toString()}\n                    index={index}\n                  >\n                    {(provided, snapshot) => {\n                      const style = {\n                        border: snapshot.isDragging\n                          ? '1px solid var(--color-accent)'\n                          : 'none',\n                        borderRadius: '4px',\n                        ...provided.draggableProps.style,\n                      };\n\n                      return (\n                        <tr\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          ref={provided.innerRef}\n                          style={style}\n                        >\n                          <td style={{ width: '300px' }}>{category.name}</td>\n                          <td style={{ width: '300px' }}>\n                            {category.isPublic ? 'Visible' : 'Hidden'}\n                          </td>\n\n                          {!snapshot.isDragging && (\n                            <TableActions\n                              entity={category}\n                              deleteHandler={deleteCategoryHandler}\n                              updateHandler={updateCategoryHandler}\n                              pinHanlder={pinCategoryHandler}\n                              changeVisibilty={changeCategoryVisibiltyHandler}\n                            />\n                          )}\n                        </tr>\n                      );\n                    }}\n                  </Draggable>\n                );\n              })}\n            </Table>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </Fragment>\n  );\n};\n","import { Category, Bookmark } from '../../../interfaces';\nimport { ContentType } from '../Bookmarks';\nimport { BookmarksTable } from './BookmarksTable';\nimport { CategoryTable } from './CategoryTable';\n\ninterface Props {\n  contentType: ContentType;\n  openFormForUpdating: (data: Category | Bookmark) => void;\n}\n\nexport const Table = (props: Props): JSX.Element => {\n  const tableEl =\n    props.contentType === ContentType.category ? (\n      <CategoryTable openFormForUpdating={props.openFormForUpdating} />\n    ) : (\n      <BookmarksTable openFormForUpdating={props.openFormForUpdating} />\n    );\n\n  return tableEl;\n};\n","import { useSelector } from 'react-redux';\nimport { Notification as NotificationInterface } from '../../interfaces';\n\nimport classes from './NotificationCenter.module.css';\n\nimport { Notification } from '../UI';\nimport { State } from '../../store/reducers';\n\nexport const NotificationCenter = (): JSX.Element => {\n  const { notifications } = useSelector((state: State) => state.notification);\n\n  return (\n    <div\n      className={classes.NotificationCenter}\n      style={{ height: `${notifications.length * 75}px` }}\n    >\n      {notifications.map((notification: NotificationInterface) => {\n        return (\n          <Notification\n            title={notification.title}\n            message={notification.message}\n            url={notification.url || null}\n            id={notification.id}\n            key={notification.id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'external-svg-loader';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { autoLogin, getConfig } from './store/action-creators';\nimport { actionCreators, store } from './store';\nimport { State } from './store/reducers';\n\n// Utils\nimport { checkVersion, decodeToken } from './utility';\n\n// Routes\nimport { Home } from './components/Home/Home';\nimport { Apps } from './components/Apps/Apps';\nimport { Settings } from './components/Settings/Settings';\nimport { Bookmarks } from './components/Bookmarks/Bookmarks';\nimport { NotificationCenter } from './components/NotificationCenter/NotificationCenter';\n\n// Get config\nstore.dispatch<any>(getConfig());\n\n// Validate token\nif (localStorage.token) {\n  store.dispatch<any>(autoLogin());\n}\n\nexport const App = (): JSX.Element => {\n  const { config, loading } = useSelector((state: State) => state.config);\n\n  const dispath = useDispatch();\n  const { fetchQueries, setTheme, logout, createNotification } =\n    bindActionCreators(actionCreators, dispath);\n\n  useEffect(() => {\n    // check if token is valid\n    const tokenIsValid = setInterval(() => {\n      if (localStorage.token) {\n        const expiresIn = decodeToken(localStorage.token).exp * 1000;\n        const now = new Date().getTime();\n\n        if (now > expiresIn) {\n          logout();\n          createNotification({\n            title: 'Info',\n            message: 'Session expired. You have been logged out',\n          });\n        }\n      }\n    }, 1000);\n\n    // set user theme if present\n    if (localStorage.theme) {\n      setTheme(localStorage.theme);\n    }\n\n    // check for updated\n    checkVersion();\n\n    // load custom search queries\n    fetchQueries();\n\n    return () => window.clearInterval(tokenIsValid);\n  }, []);\n\n  // If there is no user theme, set the default one\n  useEffect(() => {\n    if (!loading && !localStorage.theme) {\n      setTheme(config.defaultTheme, false);\n    }\n  }, [loading]);\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/settings\" component={Settings} />\n          <Route path=\"/applications\" component={Apps} />\n          <Route path=\"/bookmarks\" component={Bookmarks} />\n        </Switch>\n      </BrowserRouter>\n      <NotificationCenter />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookmarkCard\":\"BookmarkCard_BookmarkCard__1GmHc\",\"BookmarkHeader\":\"BookmarkCard_BookmarkHeader__112bh\",\"Bookmarks\":\"BookmarkCard_Bookmarks__YhsfD\",\"BookmarkIcon\":\"BookmarkCard_BookmarkIcon__2c2C5\",\"BookmarkIconSvg\":\"BookmarkCard_BookmarkIconSvg__3AFp_\",\"CustomIcon\":\"BookmarkCard_CustomIcon__2I7Wo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppCard\":\"AppCard_AppCard__1V2_0\",\"AppCardIcon\":\"AppCard_AppCardIcon__8ZZTq\",\"AppCardDetails\":\"AppCard_AppCardDetails__tbAhY\",\"CustomIcon\":\"AppCard_CustomIcon__2hMRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"AppDetails_text__1zVc7\",\"separator\":\"AppDetails_separator__3gemR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableActions\":\"TableActions_TableActions__2_v2I\",\"TableAction\":\"TableActions_TableAction__tc3XZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Settings\":\"Settings_Settings__2WEZf\",\"SettingsNav\":\"Settings_SettingsNav__14rA1\",\"SettingsNavLink\":\"Settings_SettingsNavLink__1Eo-j\",\"SettingsNavLinkActive\":\"Settings_SettingsNavLinkActive__BWxtM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemePreview\":\"ThemePreview_ThemePreview__18kK9\",\"ColorsPreview\":\"ThemePreview_ColorsPreview__3g6xG\",\"ColorPreview\":\"ThemePreview_ColorPreview__2Ej_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableContainer\":\"Table_TableContainer__1B3tr\",\"Table\":\"Table_Table__asF6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2gEfE\",\"NotificationOpen\":\"Notification_NotificationOpen__1rVdu\",\"slideIn\":\"Notification_slideIn__1h2u7\",\"NotificationClose\":\"Notification_NotificationClose__1qZe5\",\"slideOut\":\"Notification_slideOut__3r_Oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionButton\":\"ActionButton_ActionButton__3Ckgw\",\"ActionButtonIcon\":\"ActionButton_ActionButtonIcon__oPDrT\",\"ActionButtonName\":\"ActionButton_ActionButtonName__32SDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\",\"ModalClose\":\"Modal_ModalClose__3Cav6\",\"ModalOpen\":\"Modal_ModalOpen__xRwYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2oavH\",\"HeaderMain\":\"Header_HeaderMain__ZUhf5\",\"SettingsLink\":\"Header_SettingsLink__3ublJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherWidget\":\"WeatherWidget_WeatherWidget__1Wn8c\",\"WeatherDetails\":\"WeatherWidget_WeatherDetails__2JUm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueriesGrid\":\"CustomQueries_QueriesGrid__mK25k\",\"ActionIcons\":\"CustomQueries_ActionIcons__1UM6A\",\"Separator\":\"CustomQueries_Separator__3UE1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__BWqNs\",\"load1\":\"Spinner_load1__1BXDX\",\"SpinnerWrapper\":\"Spinner_SpinnerWrapper__3JM2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeadlineTitle\":\"Headline_HeadlineTitle__3WjW5\",\"HeadlineSubtitle\":\"Headline_HeadlineSubtitle__Aon5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalForm\":\"ModalForm_ModalForm__KUznX\",\"ModalFormIcon\":\"ModalForm_ModalFormIcon__3Og8r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__29Z38\",\"messageCenter\":\"Message_messageCenter__2vR-V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsButton\":\"Home_SettingsButton__Qvn8C\",\"HomeSpace\":\"Home_HomeSpace__2q0OU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__2Pbl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionsContainer\":\"Apps_ActionsContainer__1Nn5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Switch\":\"AppForm_Switch__2fvrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Switch\":\"Form_Switch__1wYhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Layout_Container__2Hv3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"Icon_Icon__1Fl5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionHeadline\":\"SectionHeadline_SectionHeadline__2gmr_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputGroup\":\"InputGroup_InputGroup__1Nm_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1hnZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppGrid\":\"AppGrid_AppGrid__33iLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookmarkGrid\":\"BookmarkGrid_BookmarkGrid__26LlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThemerGrid\":\"Themer_ThemerGrid__2njiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActionsContainer\":\"Bookmarks_ActionsContainer__1XPAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationCenter\":\"NotificationCenter_NotificationCenter__2YqQV\"};"],"sourceRoot":""}